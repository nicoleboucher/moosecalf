#calf response to silviculture in PGS

# Code for iSSA
save.image(file='iSSA_calf_final1.RData')

#load
load(file='iSSA_calf_final1.RData')

####################### Getting set up #########################

### LOAD PACKAGES ###
lapply(c("viridis","stringr","fastDummies","car","matrixStats","ppcor","geosphere","MODIS","MODIStsp","velox","rgeos","data.table","plyr","raster", "lubridate", "amt", "magrittr", "readr", "dplyr", "maptools", "spatstat", "tidyr", "ggplot2", "survival", "cowplot", "rgeos", "rgdal", "sf", "sp", "MASS", "readr", "boot", "reshape"), require, character.only = TRUE)

##set wd
setwd("D:/OneDrive/Documents/Academic/PhD/Publications/Calf iSSA/Data")

##set seed
set.seed(1)
options(scipen = 999)

####################### Making available tracks for iSSA #########################

### LOAD DATA ###
mydir <- "Calf locations"
myfiles <- list.files(path=mydir, pattern="*.csv", full.names=TRUE)
calf_used <- ldply(myfiles, read_csv)
calf_used$Time <- as.character(calf_used$Time)
rm(mydir,myfiles)
calf_used <- calf_used[-c(1,11,12,15,17,18)]

#check for missing values, no action if TRUE
all(complete.cases(calf_used)) 

#parse date and time and create time stamps
calf_used$hour <- format(strptime(calf_used$Time, "%H:%M:%S"),"%H:%M:%S")
calf_used$ts <- as.POSIXct(ymd(calf_used$Date) + hms(calf_used$hour))
calf_used$Month <- month(calf_used$ts)

#remove all months except capture-June and remove first 5 days (ie 30 locations)
order <- calf_used[order(calf_used$WLHID,calf_used$ts),]
calf_used_subset <- ddply(order, .(WLHID), head, n = 1600)
calf_used_subset <- calf_used_subset[!(calf_used_subset$Month > 9 & calf_used_subset$Month < 12),]
calf_used <- calf_used_subset %>% group_by(WLHID) %>% slice(27:n())
rm(order, calf_used_subset)

#create month and season columns
calf_used$Date<-as.Date(calf_used$ts,format="%m/%d/%Y")
calf_used$Day <- lubridate::day(as.POSIXlt(calf_used$ts, format="%d/%m/%Y"))
calf_used$Day <- sprintf("%02d", calf_used$Day)
calf_used$monthday <- as.numeric(paste(calf_used$Month,calf_used$Day,sep=""))
summer <- calf_used[c(calf_used$monthday >= 515 & calf_used$monthday <= 831),]
summer$Season <- "Summer"
winter <- calf_used[!(calf_used$monthday >= 515 & calf_used$monthday <= 831),]
winter$Season <- "Winter"
calf_used <- rbind(summer,winter)
calf_used$Season <- as.factor(calf_used$Season)
calf_used$monthday <- NULL
rm(summer,winter)

# remove wolves with too few locations
colnames(calf_used)[1] <- "ID"
calf_used$check <- paste(calf_used$ID, calf_used$Year, calf_used$Season) #make column for filtering
calf_used <- calf_used %>% group_by(check) %>% filter(n() > 336)#remove animals with <14 days
dt <- data.table(calf_used) #change to data.table
dt[,list(freq = .N), by = "check"] #check that no animals with <7 days remain
calf_used <- calf_used[,-18]
rm(dt)

#split by seasons
alltelemetry <- split(calf_used, calf_used$Season)
dat_summer <- alltelemetry$Summer
dat_winter <- alltelemetry$Winter
rm(alltelemetry, calf_used)

#change field names
summer_used <- dplyr::select(dat_summer, id = ID, x = Longitude, y = Latitude, t = ts)
winter_used <- dplyr::select(dat_winter, id = ID, x = Longitude, y = Latitude, t = ts)
rm(dat_summer,dat_winter)

#nest data into list-column
dat_summer_all <- summer_used %>% nest(-id)
dat_winter_all <- winter_used %>% nest(-id)
rm(summer_used,winter_used)

#create tracks and transform coordinate system
dat_summer_all <- dat_summer_all %>% 
  mutate(trk = map(data, function(d) {
    mk_track(d, x, y, t, crs = sp::CRS("+proj=longlat +datum=WGS84")) %>% 
      transform_coords(sp::CRS("+init=epsg:3005"))
}))
dat_winter_all <- dat_winter_all %>% 
  mutate(trk = map(data, function(d) {
    mk_track(d, x, y, t, crs = sp::CRS("+proj=longlat +datum=WGS84")) %>% 
      transform_coords(sp::CRS("+init=epsg:3005"))
}))


#make steps
summer_used_available <- dat_summer_all %>% mutate(ssf = lapply(trk, function(x) {
  x %>% track_resample(rate = minutes(240), tolerance = minutes(5)) %>%
    filter_min_n_burst(min_n = 3) %>%
    steps_by_burst() %>% random_steps(n = 10) %>% time_of_day(include.crepuscule = TRUE)
}))
winter_used_available <- dat_winter_all %>% mutate(ssf = lapply(trk, function(x) {
  x %>% track_resample(rate = minutes(240), tolerance = minutes(5)) %>%
    filter_min_n_burst(min_n = 3) %>%
    steps_by_burst() %>% random_steps(n = 10) %>% time_of_day(include.crepuscule = TRUE)
}))
rm(dat_summer_all,dat_winter_all)

#unnest data and clean up
calf_used_available_summer <- summer_used_available %>% unnest(ssf)
calf_used_available_summer[2:3] <- list(NULL)
calf_used_available_winter <- winter_used_available %>% unnest(ssf)
calf_used_available_winter[2:3] <- list(NULL)
rm(summer_used_available, winter_used_available)

#add season
calf_used_available_summer$season <- "Summer"
calf_used_available_winter$season <- "Winter"

#make final sheet
calf_used_available_final <- rbind(calf_used_available_summer, calf_used_available_winter)
rm(calf_used_available_summer,calf_used_available_winter)
names(calf_used_available_final) <- gsub(pattern = "_", replacement = "", x = names(calf_used_available_final))
calf_used_available_final$year <- as.factor(year(calf_used_available_final$t1))
calf_used_available_final$Date <- date(calf_used_available_final$t1)
calf_used_available_final$julian.day<-yday(calf_used_available_final$Date)

#plot density plot CITE
p_allsl <- ggplot(calf_used_available_final[calf_used_available_final$case=="TRUE",],aes(sl, fill = factor(season))) + geom_density(alpha = 0.4)+ labs(fill = "Calf")+labs(x= "Step length", y = "Density")
p_allsl
rm(p_allsl)

####################### Spatial preparation and covariate extraction #########################

#making steps into spatialpointsdataframe (from end points)
crs <- CRS("+init=epsg:3005")
calf_ua_sp_start <- SpatialPointsDataFrame(calf_used_available_final[,c(3,5)], calf_used_available_final, proj4string=crs)
calf_ua_sp_end <- SpatialPointsDataFrame(calf_used_available_final[,c(4,6)],calf_used_available_final, proj4string=crs)

############### current NDVI ##################

#import NDVI files into stack
NDVI.rasters<-stack(list.files("D:\\OneDrive\\Documents\\Academic\\PhD\\Publications\\iSSA\\Data\\Spatial\\Plant\\VI_16Days_250m_v6\\NDVI",pattern='\\.tif$',full.names = TRUE))

#extract julian day from file name
substrRight <- function(x, from, to){
  substr(x, nchar(x)-from+1, nchar(x)-to) 
}

#make into velox stack and add names
NDVI.rasters.vx<-velox(NDVI.rasters)
names(NDVI.rasters.vx$rasterbands)<-names(NDVI.rasters)

#transform to raster crs
calf_ua_sp_start_win1 <- spTransform(calf_ua_sp_start_win,crs(NDVI.rasters))
calf_ua_sp_end_win1 <- spTransform(calf_ua_sp_end_win,crs(NDVI.rasters))

#determine NDVI at each point, matched in time to closest 16-day window for NDVI, extracted from start_win of step
calf_vars_start_win<-list()

for(i in 1:nrow(calf_used_available_final_win)){
pt<-calf_ua_sp_start_win1[i,]
day<-as.numeric(pt$julian.day-15):as.numeric(pt$julian.day) ## gives sequence of julian dates 16 days prior to the calf point date
NDVI.v<-velox(NDVI.rasters.vx$rasterbands[[which(as.numeric(substrRight(names(NDVI.rasters.vx$rasterbands),8,4)) == year(pt$Date)&
                                          as.numeric(substrRight(names(NDVI.rasters.vx$rasterbands),3,0)) %in% day)]],res = res(NDVI.rasters),extent=as.vector(extent(NDVI.rasters)),crs=crs(NDVI.rasters)) # finds the NDVI raster that was found in the day window
pt$NDVI<-NDVI.v$extract_points(pt)
calf_vars_start_win[[i]]<-as.data.frame(pt)
print(i)
}

calf_vars_start_win<-bind_rows(calf_vars_start_win)

#determine NDVI at each point, matched in time to closest 16-day window for NDVI, extracted from end of step
calf_vars_end_win<-list()

for(i in 1:nrow(calf_used_available_final_win)){
pt<-calf_ua_sp_end_win1[i,]
day<-as.numeric(pt$julian.day-15):as.numeric(pt$julian.day) ## gives sequence of julian dates 16 days prior to the calf point date
NDVI.v<-velox(NDVI.rasters.vx$rasterbands[[which(as.numeric(substrRight(names(NDVI.rasters.vx$rasterbands),8,4)) == year(pt$Date)&
                                          as.numeric(substrRight(names(NDVI.rasters.vx$rasterbands),3,0)) %in% day)]],res = res(NDVI.rasters),extent=as.vector(extent(NDVI.rasters)),crs=crs(NDVI.rasters)) # finds the NDVI raster that was found in the day window
pt$NDVI<-NDVI.v$extract_points(pt)
calf_vars_end_win[[i]]<-as.data.frame(pt)
print(i)
}

calf_vars_end_win<-bind_rows(calf_vars_end_win)

#add NDVI to full dataset
calf_used_available_final_win$start_NDVI <- calf_vars_start_win$NDVI
calf_used_available_final_win$end_NDVI <- calf_vars_end_win$NDVI

#apply scaling factor and remove NAs
calf_used_available_final_win$start_NDVI <- calf_used_available_final_win$start_NDVI*0.0001
calf_used_available_final_win$end_NDVI <- calf_used_available_final_win$end_NDVI*0.0001
calf_used_available_final_win$start_NDVI[is.na(calf_used_available_final_win$start_NDVI)] = mean(calf_used_available_final_win$start_NDVI, na.rm=TRUE)
calf_used_available_final_win$end_NDVI[is.na(calf_used_available_final_win$end_NDVI)] = mean(calf_used_available_final_win$end_NDVI, na.rm=TRUE)
rm(NDVI.rasters,calf_vars_end,calf_vars_start,pt,calf_ua_sp_start1, calf_ua_sp_end1)
rm(NDVI.rasters.vx,NDVI.v)

############ Mean NDVI #####################

NDVI2018 <- raster("D:\\OneDrive\\Documents\\Academic\\PhD\\Publications\\iSSA\\Data\\Spatial\\NDVI\\VI_16Days_250m_v6\\NDVImonth\\NDVI2018.tif")
NDVI2019 <- raster("D:\\OneDrive\\Documents\\Academic\\PhD\\Publications\\iSSA\\Data\\Spatial\\NDVI\\VI_16Days_250m_v6\\NDVImonth\\NDVI2019.tif")
NDVI2020 <- raster("D:\\OneDrive\\Documents\\Academic\\PhD\\Publications\\iSSA\\Data\\Spatial\\NDVI\\VI_16Days_250m_v6\\NDVImonth\\NDVI2020.tif")

#extract at end of step
calf_used_available_final$start_NDVImean <- if (calf_ua_sp_start$year == "2018"){raster::extract(NDVI2018,calf_ua_sp_start)
} else if (calf_ua_sp_start$year == "2019"){raster::extract(NDVI2019,calf_ua_sp_start)
} else if (calf_ua_sp_start$year == "2020"){raster::extract(NDVI2020,calf_ua_sp_start)
      } else (print("NA"))
calf_used_available_final$end_NDVImean <- if (calf_ua_sp_end$year == "2018"){raster::extract(NDVI2018,calf_ua_sp_end)
} else if (calf_ua_sp_end$year == "2019"){raster::extract(NDVI2019,calf_ua_sp_end)
} else if (calf_ua_sp_end$year == "2020"){raster::extract(NDVI2020,calf_ua_sp_end)
      } else (print("NA"))

calf_used_available_final$end_NDVImean <- calf_used_available_final$end_NDVImean*0.0001
calf_used_available_final$start_NDVImean <- calf_used_available_final$start_NDVImean*0.0001
calf_used_available_final$end_NDVImean[is.na(calf_used_available_final$end_NDVImean)] = mean(calf_used_available_final$end_NDVImean, na.rm=TRUE)
calf_used_available_final$start_NDVImean[is.na(calf_used_available_final$start_NDVImean)] = mean(calf_used_available_final$start_NDVImean, na.rm=TRUE)


############### Land Cover ####################

#load in data
VRI <- raster("D:\\OneDrive\\Documents\\Academic\\PhD\\Publications\\iSSA\\Data\\Spatial\\VRI\\LANDCOVER_FINAL_PGS_RAST.tif")
lookup <- read.csv("D:\\OneDrive\\Documents\\Academic\\PhD\\Publications\\iSSA\\Data\\Spatial\\Landcover\\VRI_TABLE.csv")

#substitute object ID with landcover
VRI <- subs(VRI,lookup,by="OBJECTID_1",which="Landcover")
VRI <- as.factor(VRI)

#extract VRI at start of step
calf_used_available_final$start_landcover <- as.factor(round(raster::extract(VRI,calf_ua_sp_start)))

#extract VRI at end of step
calf_used_available_final$end_landcover <- as.factor(round(raster::extract(VRI,calf_ua_sp_end)))

#replace levels
levels(calf_used_available_final$start_landcover) <- c("Coniferous","Deciduous","MixedForest","Nonforest","Pine")
levels(calf_used_available_final$end_landcover) <- c("Coniferous","Deciduous","MixedForest","Nonforest","Pine")

#change into dummies
calf_used_available_final<-dummy_cols(calf_used_available_final, select_columns="start_landcover",remove_first_dummy=FALSE,remove_most_frequent_dummy = FALSE)
calf_used_available_final<-dummy_cols(calf_used_available_final, select_columns="end_landcover",remove_first_dummy=FALSE,remove_most_frequent_dummy = FALSE)
rm(lookup)

#make a factor
calf_used_available_final$start_landcover_Coniferous <- as.factor(calf_used_available_final$start_landcover_Coniferous)
calf_used_available_final$start_landcover_Deciduous <- as.factor(calf_used_available_final$start_landcover_Deciduous)
calf_used_available_final$start_landcover_Pine <- as.factor(calf_used_available_final$start_landcover_Pine)
calf_used_available_final$start_landcover_MixedForest <- as.factor(calf_used_available_final$start_landcover_MixedForest)
calf_used_available_final$start_landcover_Nonforest <- as.factor(calf_used_available_final$start_landcover_Nonforest)

calf_used_available_final$end_landcover_Coniferous <- as.factor(calf_used_available_final$end_landcover_Coniferous)
calf_used_available_final$end_landcover_Deciduous <- as.factor(calf_used_available_final$end_landcover_Deciduous)
calf_used_available_final$end_landcover_Pine <- as.factor(calf_used_available_final$end_landcover_Pine)
calf_used_available_final$end_landcover_MixedForest <- as.factor(calf_used_available_final$end_landcover_MixedForest)
calf_used_available_final$end_landcover_Nonforest <- as.factor(calf_used_available_final$end_landcover_Nonforest)

################landcover proportion #######################

###VRI
coniferous <- (VRI$Landcover==1)
deciduous <-  (VRI$Landcover==2)
mixedforest <-  (VRI$Landcover==3)
pine <-  (VRI$Landcover==5)

#add zeroes
coniferous[is.na(coniferous[])] <- 0
deciduous[is.na(deciduous[])] <- 0
pine[is.na(pine[])] <- 0
mixedforest[is.na(mixedforest[])] <- 0
conifer <- coniferous +pine

#extract data from buffers
calf_ua_sp_end$fid <- seq.int(nrow(calf_ua_sp_end))

#extract data based on year - coniferous end
coniferous2000m_end <- raster::extract(coniferous,calf_ua_sp_end,buffer = 2000)
coniferous_end <- lapply(coniferous2000m_end, function(x){
    prop.table(table(x))
  })

# convert to data frame
coniferousprop_end <- data.frame(id = rep(calf_ua_sp_end$fid, lapply(coniferous_end, length)),
                     cover = names(unlist(coniferous_end)),
                     percent = unlist(coniferous_end))
coniferousprop_end <- reshape(coniferousprop_end, idvar = "id", timevar = "cover", direction = "wide")
calf_used_available_final$coniferous <- coniferousprop_end$percent.1
rm(coniferousprop_end,coniferous_end,coniferous2000m_end)


#extract data based on year - conifer end
conifer2000m_end <- raster::extract(conifer,calf_ua_sp_end,buffer = 2000)
conifer_end <- lapply(conifer2000m_end, function(x){
    prop.table(table(x))
  })

# convert to data frame
coniferprop_end <- data.frame(id = rep(calf_ua_sp_end$fid, lapply(conifer_end, length)),
                     cover = names(unlist(conifer_end)),
                     percent = unlist(conifer_end))
coniferprop_end <- reshape(coniferprop_end, idvar = "id", timevar = "cover", direction = "wide")
calf_used_available_final$conifer <- coniferprop_end$percent.1
rm(coniferprop_end,conifer_end,conifer2000m_end)

#extract data based on year - deciduous end
deciduous2000m_end <- raster::extract(deciduous,calf_ua_sp_end,buffer = 2000)
deciduous_end <- lapply(deciduous2000m_end, function(x){
    prop.table(table(x))
  })

# convert to data frame
deciduousprop_end <- data.frame(id = rep(calf_ua_sp_end$fid, lapply(deciduous_end, length)),
                     cover = names(unlist(deciduous_end)),
                     percent = unlist(deciduous_end))
deciduousprop_end <- reshape(deciduousprop_end, idvar = "id", timevar = "cover", direction = "wide")
calf_used_available_final$deciduous <- deciduousprop_end$percent.1
rm(deciduousprop_end,deciduous_end,deciduous2000m_end)

#extract data based on year - pine end
pine2000m_end <- raster::extract(pine,calf_ua_sp_end,buffer = 2000)
pine_end <- lapply(pine2000m_end, function(x){
    prop.table(table(x))
  })

# convert to data frame
pineprop_end <- data.frame(id = rep(calf_ua_sp_end$fid, lapply(pine_end, length)),
                     cover = names(unlist(pine_end)),
                     percent = unlist(pine_end))
pineprop_end <- reshape(pineprop_end, idvar = "id", timevar = "cover", direction = "wide")
calf_used_available_final$pine <- pineprop_end$percent.1
rm(pineprop_end,pine_end,pine2000m_end)

#extract data based on year - mixedforest end
mixedforest2000m_end <- raster::extract(mixedforest,calf_ua_sp_end,buffer = 2000)
mixedforest_end <- lapply(mixedforest2000m_end, function(x){
    prop.table(table(x))
  })

# convert to data frame
mixedforestprop_end <- data.frame(id = rep(calf_ua_sp_end$fid, lapply(mixedforest_end, length)),
                     cover = names(unlist(mixedforest_end)),
                     percent = unlist(mixedforest_end))
mixedforestprop_end <- reshape(mixedforestprop_end, idvar = "id", timevar = "cover", direction = "wide")
calf_used_available_final$mixedforest <- mixedforestprop_end$percent.1
rm(mixedforestprop_end,mixedforest_end,mixedforest2000m_end)
rm(VRI,coniferous,mixedforest,pine,deciduous)

############### Road density ######################

#load road density data
roaddens <- raster("D:\\OneDrive\\Documents\\Academic\\PhD\\Publications\\iSSA\\Data\\Spatial\\Roads\\PGS_ROADDENS_FINAL.tif")

#extract roaddens at start of step
calf_used_available_final$start_roaddens <- raster::extract(roaddens,calf_ua_sp_start)

#extract roaddens at end of step
calf_used_available_final$end_roaddens <- raster::extract(roaddens,calf_ua_sp_end)
rm(roaddens)

############# Distance to Road ########################

#load distance to road data
roaddist <- raster("D:\\OneDrive\\Documents\\Academic\\PhD\\Publications\\iSSA\\Data\\Spatial\\Roads\\EucDist_road10m.tif")

#extract roaddist at start of step
calf_used_available_final$start_roaddist <- as.numeric(raster::extract(roaddist,calf_ua_sp_start))

#extract roaddist at end of step
calf_used_available_final$end_roaddist <- as.numeric(raster::extract(roaddist,calf_ua_sp_end))
rm(roaddist)

############# Cut blocks ###############################

#load shapefile
cut2018 <- readOGR(dsn="D:\\OneDrive\\Documents\\Academic\\PhD\\Publications\\iSSA\\Data\\Spatial\\RESULTS", layer="RESULTS_CLIP_50km_2018")
cut2019 <- readOGR(dsn="D:\\OneDrive\\Documents\\Academic\\PhD\\Publications\\iSSA\\Data\\Spatial\\RESULTS", layer="RESULTS_CLIP_50km_2019")
cut2020 <- readOGR(dsn="D:\\OneDrive\\Documents\\Academic\\PhD\\Publications\\iSSA\\Data\\Spatial\\RESULTS", layer="RESULTS_CLIP_50km_2020")

#clean up
cut2018clean <- cut2018[,-(c(1:114,116:121,123))]
cut2019clean <- cut2019[,-(c(1:114,116:121,123))]
cut2020clean <- cut2020[,(c(115,122,124))]
head(cut2018clean@data)
which(colnames(cut2018@data)=="AgeClass") #determines which columns to cut
rm(cut2018,cut2019)

#transform crs
cut2018clean <- spTransform(cut2018clean,crs("+init=epsg:3005 +proj=aea +lat_1=50 +lat_2=58.5 +lat_0=45 +lon_0=-126 +x_0=1000000 +y_0=0 +ellps=GRS80 +datum=NAD83 +units=m +no_defs"))
cut2019clean <- spTransform(cut2019clean,crs("+init=epsg:3005 +proj=aea +lat_1=50 +lat_2=58.5 +lat_0=45 +lon_0=-126 +x_0=1000000 +y_0=0 +ellps=GRS80 +datum=NAD83 +units=m +no_defs"))
cut2020clean <- spTransform(cut2020clean,crs("+init=epsg:3005 +proj=aea +lat_1=50 +lat_2=58.5 +lat_0=45 +lon_0=-126 +x_0=1000000 +y_0=0 +ellps=GRS80 +datum=NAD83 +units=m +no_defs"))

#extract data based on year at start of step
start_overcut <- if (calf_ua_sp_start$year == "2018"){over(calf_ua_sp_start,cut2018clean,fun=NULL)
} else if (calf_ua_sp_start$year == "2019"){over(calf_ua_sp_start,cut2019clean,fun=NULL)
} else if (calf_used_available_final$year == "2020"){over(calf_ua_sp_start,cut2020clean,fun=NULL) #change when 2020 cuts available
      } else (print("NA"))
colnames(start_overcut)[1] <- "start_sizeha"
colnames(start_overcut)[2] <- "start_cutage"
colnames(start_overcut)[3] <- "start_cutageclass"

#extract data based on year at end of step
end_overcut <- if (calf_ua_sp_end$year == "2018"){over(calf_ua_sp_end,cut2018clean,fun=NULL)
} else if (calf_ua_sp_end$year == "2019"){over(calf_ua_sp_end,cut2019clean,fun=NULL)
} else if (calf_used_available_final$year == "2020"){over(calf_ua_sp_end,cut2020clean,fun=NULL) #change when 2020 cuts available
      } else (print("NA"))
colnames(end_overcut)[1] <- "end_sizeha"
colnames(end_overcut)[2] <- "end_cutage"
colnames(end_overcut)[3] <- "end_cutageclass"

#combine with the dataset
calf_used_available_final <- cbind(calf_used_available_final,start_overcut,end_overcut)
calf_used_available_final$start_sizeha[is.na(calf_used_available_final$start_sizeha)] = 0
calf_used_available_final$end_sizeha[is.na(calf_used_available_final$end_sizeha)] = 0
calf_used_available_final$start_cutage[is.na(calf_used_available_final$start_cutage)] = 0
calf_used_available_final$end_cutage[is.na(calf_used_available_final$end_cutage)] = 0
calf_used_available_final$start_cutageclass <- as.factor(calf_used_available_final$start_cutageclass)
calf_used_available_final$end_cutageclass <- as.factor(calf_used_available_final$end_cutageclass)
calf_used_available_final$start_cutageclass<- factor(calf_used_available_final$start_cutageclass, levels = levels(addNA(calf_used_available_final$start_cutageclass)), labels = c(levels(calf_used_available_final$start_cutageclass), "UnCut"), exclude = NULL)
calf_used_available_final$end_cutageclass<- factor(calf_used_available_final$end_cutageclass, levels = levels(addNA(calf_used_available_final$end_cutageclass)), labels = c(levels(calf_used_available_final$end_cutageclass), "UnCut"), exclude = NULL)

#make dummies for cut age classes
calf_used_available_final<-dummy_cols(calf_used_available_final, select_columns="start_cutageclass",remove_first_dummy=FALSE,remove_most_frequent_dummy = FALSE)
calf_used_available_final<-dummy_cols(calf_used_available_final, select_columns="end_cutageclass",remove_first_dummy=FALSE,remove_most_frequent_dummy = FALSE)

rm(start_overcut, end_overcut)
rm(cut2018clean,cut2019clean,cut2019,cut2018,cut2020,cut2020clean)

#################### Cutblock proportion - new/regen #################################

#load cut rasters
cutage2018 <- raster("D:\\OneDrive\\Documents\\Academic\\PhD\\Publications\\iSSA\\Data\\Spatial\\RESULTS\\RESULTS_RASTERS\\RESULTSage2018.tif")
cutage2019 <- raster("D:\\OneDrive\\Documents\\Academic\\PhD\\Publications\\iSSA\\Data\\Spatial\\RESULTS\\RESULTS_RASTERS\\RESULTSage2019.tif")
cutage2020 <- raster("D:\\OneDrive\\Documents\\Academic\\PhD\\Publications\\iSSA\\Data\\Spatial\\RESULTS\\RESULTS_RASTERS\\RESULTSage2020.tif")
cutsize2018 <- raster("D:\\OneDrive\\Documents\\Academic\\PhD\\Publications\\iSSA\\Data\\Spatial\\RESULTS\\RESULTS_RASTERS\\CUTSIZE_2018.tif")
cutsize2019 <- raster("D:\\OneDrive\\Documents\\Academic\\PhD\\Publications\\iSSA\\Data\\Spatial\\RESULTS\\RESULTS_RASTERS\\CUTSIZE_2019.tif")
cutsize2020 <- raster("D:\\OneDrive\\Documents\\Academic\\PhD\\Publications\\iSSA\\Data\\Spatial\\RESULTS\\RESULTS_RASTERS\\CUTSIZE_2020.tif")

#cutblocks c("1"="regen", "2"="new","3"="old")
newcut2018 <- (cutage2018$CUTAGE_2018 =>0 & cutage2018$CUTAGE_2018 =<0)
newcut2019 <- (cutage2019$CUTAGE_2019 ==2)
newcut2020 <- (cutage2020$CUTAGE_2020 ==2)
regencut2018 <- (cutage2018$CUTAGE_2018 ==1)
regencut2019 <- (cutage2019$CUTAGE_2019 ==1)
regencut2020 <- (cutage2020$CUTAGE_2020 ==1)
rm(cutage2018,cutage2019,cutage2020,cutsize2018,cutsize2019,cutsize2020)

#add zeroes
newcut2018[is.na(newcut2018[])] <- 0
newcut2019[is.na(newcut2019[])] <- 0
newcut2020[is.na(newcut2020[])] <- 0
regencut2018[is.na(regencut2018[])] <- 0
regencut2019[is.na(regencut2019[])] <- 0
regencut2020[is.na(regencut2020[])] <- 0

#extract data based on year - new start
newcut2000m_start <- if (calf_ua_sp_start$year == "2018"){raster::extract(newcut2018,calf_ua_sp_start,buffer = 2000)
} else if (calf_ua_sp_start$year == "2019"){raster::extract(newcut2019,calf_ua_sp_start,buffer = 2000)
} else if (calf_ua_sp_start$year == "2020"){raster::extract(newcut2020,calf_ua_sp_start,buffer = 2000)
      } else (print("NA"))

newcut_start <- lapply(newcut2000m_start, function(x){
    prop.table(table(x))
  })

calf_ua_sp_start$fid <- seq.int(nrow(calf_ua_sp_start))
calf_used_available_final$fid <- seq.int(nrow(calf_used_available_final))

# convert to data frame
newcutprop_start <- data.frame(id = rep(calf_ua_sp_start$fid, lapply(newcut_start, length)),
                     cover = names(unlist(newcut_start)),
                     percent = unlist(newcut_start))
newcutprop_start <- reshape(newcutprop_start, idvar = "id", timevar = "cover", direction = "wide")
calf_used_available_final$start_newcut <- newcutprop_start$percent.1

#extract data based on year - regen start
regencut2000m <- if (calf_ua_sp_start$year == "2018"){raster::extract(regencut2018,calf_ua_sp_start,buffer = 2000)
} else if (calf_ua_sp_start$year == "2019"){raster::extract(regencut2019,calf_ua_sp_start,buffer = 2000)
} else if (calf_ua_sp_start$year == "2020"){raster::extract(regencut2020,calf_ua_sp_start,buffer = 2000)
      } else (print("NA"))

regencut_start <- lapply(regencut2000m, function(x){
    prop.table(table(x))
  })

calf_ua_sp_start$fid <- seq.int(nrow(calf_ua_sp_start))
calf_used_available_final$fid <- seq.int(nrow(calf_used_available_final))

# convert to data frame
regencutprop_start <- data.frame(id = rep(calf_ua_sp_start$fid, lapply(regencut_start, length)),
                     cover = names(unlist(regencut_start)),
                     percent = unlist(regencut_start))
regencutprop_start <- reshape(regencutprop_start, idvar = "id", timevar = "cover", direction = "wide")
calf_used_available_final$start_regencut <- regencutprop_start$percent.1


#extract data based on year - new end
newcut2000m_end <- if (calf_ua_sp_end$year == "2018"){raster::extract(newcut2018,calf_ua_sp_end,buffer = 2000)
} else if (calf_ua_sp_end$year == "2019"){raster::extract(newcut2019,calf_ua_sp_end,buffer = 2000)
} else if (calf_ua_sp_end$year == "2020"){raster::extract(newcut2020,calf_ua_sp_end,buffer = 2000)
      } else (print("NA"))

newcut_end <- lapply(newcut2000m_end, function(x){
    prop.table(table(x))
  })

calf_ua_sp_end$fid <- seq.int(nrow(calf_ua_sp_end))
calf_used_available_final$fid <- seq.int(nrow(calf_used_available_final))

# convert to data frame
newcutprop_end <- data.frame(id = rep(calf_ua_sp_end$fid, lapply(newcut_end, length)),
                     cover = names(unlist(newcut_end)),
                     percent = unlist(newcut_end))
newcutprop_end <- reshape(newcutprop_end, idvar = "id", timevar = "cover", direction = "wide")
calf_used_available_final$end_newcut <- newcutprop_end$percent.1

#extract data based on year - regen end
regencut2000m <- if (calf_ua_sp_end$year == "2018"){raster::extract(regencut2018,calf_ua_sp_end,buffer = 2000)
} else if (calf_ua_sp_end$year == "2019"){raster::extract(regencut2019,calf_ua_sp_end,buffer = 2000)
} else if (calf_ua_sp_end$year == "2020"){raster::extract(regencut2020,calf_ua_sp_end,buffer = 2000)
      } else (print("NA"))

regencut_end <- lapply(regencut2000m, function(x){
    prop.table(table(x))
  })

calf_ua_sp_end$fid <- seq.int(nrow(calf_ua_sp_end))
calf_used_available_final$fid <- seq.int(nrow(calf_used_available_final))

# convert to data frame
regencutprop_end <- data.frame(id = rep(calf_ua_sp_end$fid, lapply(regencut_end, length)),
                     cover = names(unlist(regencut_end)),
                     percent = unlist(regencut_end))
regencutprop_end <- reshape(regencutprop_end, idvar = "id", timevar = "cover", direction = "wide")
calf_used_available_final$end_regencut <- regencutprop_end$percent.1

rm(regencut2018,regencut2019,regencut2020,newcut2018,newcut2019,newcut2020)
rm(newcut_end,newcut_start,newcut2000m_end,newcut2000m_start,newcutprop_end,newcutprop_start,regencut_end,regencut_start,regencutprop_end,regencutprop_start,regencut2000m)
#################### Edge In #################################

#load distance to forest edge when in forest rasters
edgein2018 <- raster("D:\\OneDrive\\Documents\\Academic\\PhD\\Publications\\iSSA\\Data\\Spatial\\Edge\\Edgein\\EucDist_edgein2018.tif")
edgein2019 <- raster("D:\\OneDrive\\Documents\\Academic\\PhD\\Publications\\iSSA\\Data\\Spatial\\Edge\\Edgein\\EucDist_edgein2019.tif")
edgein2020 <- raster("D:\\OneDrive\\Documents\\Academic\\PhD\\Publications\\iSSA\\Data\\Spatial\\Edge\\Edgein\\EucDist_edgein2020.tif")

#extract at start of step
calf_used_available_final$start_edgein <- if (calf_ua_sp_start$year == "2018"){raster::extract(edgein2018,calf_ua_sp_start)
} else if (calf_ua_sp_start$year == "2019"){raster::extract(edgein2019,calf_ua_sp_start)
} else if (calf_used_available_final$year == "2020"){eraster::extract(edgein2020,calf_ua_sp_start) #change when 2020 cuts available
      } else (print("NA"))

#extract at end of step
calf_used_available_final$end_edgein <- if (calf_ua_sp_end$year == "2018"){raster::extract(edgein2018,calf_ua_sp_end)
} else if (calf_ua_sp_end$year == "2019"){raster::extract(edgein2019,calf_ua_sp_end)
} else if (calf_used_available_final$year == "2020"){raster::extract(edgein2020,calf_ua_sp_end) #change when 2020 cuts available
      } else (print("NA"))
rm(edgein2018,edgein2019,edgein2020)

calf_used_available_final$start_edgein[is.na(calf_used_available_final$start_edgein)] = mean(calf_used_available_final$start_edgein, na.rm=TRUE)
calf_used_available_final$end_edgein[is.na(calf_used_available_final$end_edgein)] = mean(calf_used_available_final$end_edgein, na.rm=TRUE)

#################### Edge Out #################################

#load distance to forest edge when outside forest rasters
edgeout2018 <- raster("D:\\OneDrive\\Documents\\Academic\\PhD\\Publications\\iSSA\\Data\\Spatial\\Edge\\edgeout\\EucDist_edgeout2018.tif")
edgeout2019 <- raster("D:\\OneDrive\\Documents\\Academic\\PhD\\Publications\\iSSA\\Data\\Spatial\\Edge\\edgeout\\EucDist_edgeout2019.tif")
edgeout2020 <- raster("D:\\OneDrive\\Documents\\Academic\\PhD\\Publications\\iSSA\\Data\\Spatial\\Edge\\edgeout\\EucDist_edgeout2020.tif")

#extract at start of step
calf_used_available_final$start_edgeout <- if (calf_ua_sp_start$year == "2018"){raster::extract(edgeout2018,calf_ua_sp_start)
} else if (calf_ua_sp_start$year == "2019"){raster::extract(edgeout2019,calf_ua_sp_start)
} else if (calf_used_available_final$year == "2020"){raster::extract(edgeout2020,calf_ua_sp_start) #change when 2020 cuts available
      } else (print("NA"))

#extract at end of step
calf_used_available_final$end_edgeout <- if (calf_ua_sp_end$year == "2018"){raster::extract(edgeout2018,calf_ua_sp_end)
} else if (calf_ua_sp_end$year == "2019"){eraster::extract(edgeout2019,calf_ua_sp_end)
} else if (calf_used_available_final$year == "2020"){raster::extract(edgeout2020,calf_ua_sp_end) #change when 2020 cuts available
      } else (print("NA"))
rm(edgeout2018,edgeout2019,edgeout2020)

#################### Distance to water  ########

#import raster
water <- raster("D:\\OneDrive\\Documents\\Academic\\PhD\\Publications\\iSSA\\Data\\Spatial\\Water\\dist_water10m.tif")

#extract roaddens at start of step
calf_used_available_final$start_water <- raster::extract(water,calf_ua_sp_start)

#extract roaddens at end of step
calf_used_available_final$end_water <- raster::extract(water,calf_ua_sp_end)
rm(water)

########### Wolf RSF ###################

#import rasters
RSFsummer2018 <- raster("D:\\OneDrive\\Documents\\Academic\\PhD\\Publications\\iSSA\\Data\\Spatial\\WolfRSF\\RSFsummer2018.tif")
RSFwinter2018 <- raster("D:\\OneDrive\\Documents\\Academic\\PhD\\Publications\\iSSA\\Data\\Spatial\\WolfRSF\\RSFwinter2018.tif")
RSFsummer2019 <- raster("D:\\OneDrive\\Documents\\Academic\\PhD\\Publications\\iSSA\\Data\\Spatial\\WolfRSF\\RSFsummer2019.tif")
RSFwinter2019 <- raster("D:\\OneDrive\\Documents\\Academic\\PhD\\Publications\\iSSA\\Data\\Spatial\\WolfRSF\\RSFwinter2019.tif")
RSFsummer2020 <- raster("D:\\OneDrive\\Documents\\Academic\\PhD\\Publications\\iSSA\\Data\\Spatial\\WolfRSF\\RSFsummer2020.tif")
RSFwinter2020 <- raster("D:\\OneDrive\\Documents\\Academic\\PhD\\Publications\\iSSA\\Data\\Spatial\\WolfRSF\\RSFwinter2020.tif")

#add zeroes
RSFsummer2018[is.na(RSFsummer2018[])] <- 0
RSFsummer2019[is.na(RSFsummer2019[])] <- 0
RSFsummer2020[is.na(RSFsummer2020[])] <- 0
RSFwinter2018[is.na(RSFwinter2018[])] <- 0
RSFwinter2019[is.na(RSFwinter2019[])] <- 0
RSFwinter2020[is.na(RSFwinter2020[])] <- 0

#extract at start of step
calf_used_available_final$start_wolf <- if (calf_ua_sp_start$year == "2018" & calf_ua_sp_start$season =="Summer"){raster::extract(RSFsummer2018,calf_ua_sp_start)
} else if (calf_ua_sp_start$year == "2019" & calf_ua_sp_start$season =="Summer"){raster::extract(RSFsummer2019,calf_ua_sp_start)
} else if (calf_used_available_final$year == "2020"  & calf_ua_sp_start$season =="Summer"){raster::extract(RSFsummer2020,calf_ua_sp_start)
} else if (calf_ua_sp_start$year == "2018" & calf_ua_sp_start$season =="Winter"){raster::extract(RSFwinter2018,calf_ua_sp_start)
} else if (calf_ua_sp_start$year == "2019" & calf_ua_sp_start$season =="Winter"){raster::extract(RSFwinter2019,calf_ua_sp_start)
} else if (calf_used_available_final$year == "2020"  & calf_ua_sp_start$season =="Winter"){raster::extract(RSFwinter2020,calf_ua_sp_start)
      } else (print("NA"))

#extract at end of step
calf_used_available_final$end_wolf <- if (calf_ua_sp_end$year == "2018" & calf_ua_sp_end$season =="Summer"){raster::extract(RSFsummer2018,calf_ua_sp_end)
} else if (calf_ua_sp_end$year == "2019" & calf_ua_sp_end$season =="Summer"){raster::extract(RSFsummer2019,calf_ua_sp_end)
} else if (calf_used_available_final$year == "2020"  & calf_ua_sp_end$season =="Summer"){raster::extract(RSFsummer2020,calf_ua_sp_end)
} else if (calf_ua_sp_end$year == "2018" & calf_ua_sp_end$season =="Winter"){raster::extract(RSFwinter2018,calf_ua_sp_end)
} else if (calf_ua_sp_end$year == "2019" & calf_ua_sp_end$season =="Winter"){raster::extract(RSFwinter2019,calf_ua_sp_end)
} else if (calf_used_available_final$year == "2020"  & calf_ua_sp_end$season =="Winter"){raster::extract(RSFwinter2020,calf_ua_sp_end)
      } else (print("NA"))

#extract at start of step
calf_used_available_final$start_wolfbuf <- if (calf_ua_sp_start$year == "2018" & calf_ua_sp_start$season =="Summer"){raster::extract(RSFsummer2018,calf_ua_sp_start,buffer = 1000,fun=max)
} else if (calf_ua_sp_start$year == "2019" & calf_ua_sp_start$season =="Summer"){raster::extract(RSFsummer2019,calf_ua_sp_start,buffer = 1000,fun=max)
} else if (calf_used_available_final$year == "2020"  & calf_ua_sp_start$season =="Summer"){raster::extract(RSFsummer2020,calf_ua_sp_start,buffer = 1000,fun=max)
} else if (calf_ua_sp_start$year == "2018" & calf_ua_sp_start$season =="Winter"){raster::extract(RSFwinter2018,calf_ua_sp_start,buffer = 1000,fun=max)
} else if (calf_ua_sp_start$year == "2019" & calf_ua_sp_start$season =="Winter"){raster::extract(RSFwinter2019,calf_ua_sp_start,buffer = 1000,fun=max)
} else if (calf_used_available_final$year == "2020"  & calf_ua_sp_start$season =="Winter"){raster::extract(RSFwinter2020,calf_ua_sp_start,buffer = 1000,fun=max)
      } else (print("NA"))

#extract at end of step
calf_used_available_final$end_wolfbuf <- if (calf_ua_sp_end$year == "2018" & calf_ua_sp_end$season =="Summer"){raster::extract(RSFsummer2018,calf_ua_sp_end,buffer = 1000,fun=max)
} else if (calf_ua_sp_end$year == "2019" & calf_ua_sp_end$season =="Summer"){raster::extract(RSFsummer2019,calf_ua_sp_end,buffer = 1000,fun=max)
} else if (calf_used_available_final$year == "2020"  & calf_ua_sp_end$season =="Summer"){raster::extract(RSFsummer2020,calf_ua_sp_end,buffer = 1000,fun=max)
} else if (calf_ua_sp_end$year == "2018" & calf_ua_sp_end$season =="Winter"){raster::extract(RSFwinter2018,calf_ua_sp_end,buffer = 1000,fun=max)
} else if (calf_ua_sp_end$year == "2019" & calf_ua_sp_end$season =="Winter"){raster::extract(RSFwinter2019,calf_ua_sp_end,buffer = 1000,fun=max)
} else if (calf_used_available_final$year == "2020"  & calf_ua_sp_end$season =="Winter"){raster::extract(RSFwinter2020,calf_ua_sp_end,buffer = 1000,fun=max)
      } else (print("NA"))

rm(RSFsummer2018,RSFwinter2018,RSFsummer2019,RSFwinter2019,RSFsummer2020,RSFwinter2020)


########### save data! ###############
 
rm(calf_ua_sp_start, calf_ua_sp_end,crs,day,i)

write.csv(calf_used_available_final, "calf_used_available_final.csv")

save.image(file='iSSA_calf_final.RData')
load(file='iSSA_calf_final.RData')

############# Reload data (if failed) #####################

#load data
calf_used_available_final<-read.csv("calf_used_available_final.csv")
calf_used_available_final <- calf_used_available_final[,-1]
  
#rename headings
calf_used_available_final<-as.data.frame(calf_used_available_final)
calf_used_available_final$Year <- calf_used_available_final$year
calf_used_available_final$used <- sub("TRUE","1", calf_used_available_final$case)
calf_used_available_final$used <- sub("FALSE","0", calf_used_available_final$used)
calf_used_available_final$used <- as.numeric(calf_used_available_final$used)

#change to factor
names(calf_used_available_final)[names(calf_used_available_final) == "id"] <- "name"
calf_used_available_final$name <- as.factor(calf_used_available_final$name)
calf_used_available_final$tod_end <- as.numeric(ifelse(calf_used_available_final$todend=="day",0,1))
calf_used_available_final$tod_end <- as.numeric(calf_used_available_final$tod_end)
calf_used_available_final$Year <- as.factor(calf_used_available_final$Year)

#make log step length and cosine turn angle
calf_used_available_final$lnSL <- log(calf_used_available_final$sl/1000)
calf_used_available_final$cosTA <- cos(calf_used_available_final$ta)

calf_used_available_final$conifer[is.na(calf_used_available_final$conifer)] = mean(calf_used_available_final$conifer,na.rm=T)
calf_used_available_final$coniferous[is.na(calf_used_available_final$coniferous)] = mean(calf_used_available_final$coniferous,na.rm=T)
calf_used_available_final$deciduous[is.na(calf_used_available_final$deciduous)] = mean(calf_used_available_final$deciduous,na.rm=T)
calf_used_available_final$pine[is.na(calf_used_available_final$pine)] = mean(calf_used_available_final$pine,na.rm=T)
calf_used_available_final$mixedforest[is.na(calf_used_available_final$mixedforest)] = mean(calf_used_available_final$mixedforest,na.rm=T)
calf_used_available_final$end_newcut[is.na(calf_used_available_final$end_newcut)] = mean(calf_used_available_final$end_newcut,na.rm=T)
calf_used_available_final$start_newcut[is.na(calf_used_available_final$start_newcut)] = mean(calf_used_available_final$start_newcut,na.rm=T)
calf_used_available_final$start_regencut[is.na(calf_used_available_final$start_regencut)] = mean(calf_used_available_final$start_regencut,na.rm=T)
calf_used_available_final$end_regencut[is.na(calf_used_available_final$end_regencut)] = mean(calf_used_available_final$end_regencut,na.rm=T)
calf_used_available_final$start_wolfbuf[is.na(calf_used_available_final$start_wolfbuf)] = mean(calf_used_available_final$start_wolfbuf,na.rm=T)
calf_used_available_final$end_wolfbuf[is.na(calf_used_available_final$end_wolfbuf)] = mean(calf_used_available_final$end_wolfbuf,na.rm=T)

#log of distance variables
calf_used_available_final$ln_end_water <- log(calf_used_available_final$end_water+0.1)
calf_used_available_final$ln_start_water <- log(calf_used_available_final$start_water+0.1)
calf_used_available_final$ln_start_roaddist <- log(calf_used_available_final$start_roaddist+0.1)
calf_used_available_final$ln_end_roaddist <- log(calf_used_available_final$end_roaddist+0.1)
calf_used_available_final$ln_end_edgeout <- log((calf_used_available_final$end_edgeout/1000)+0.01)
calf_used_available_final$ln_end_edgein <- log((calf_used_available_final$end_edgein/1000)+0.01)
calf_used_available_final$ln_end_newcut <- log(calf_used_available_final$end_newcut+0.01)
calf_used_available_final$ln_end_regencut <- log(calf_used_available_final$end_regencut+0.01)
calf_used_available_final$ln_start_newcut <- log(calf_used_available_final$start_newcut+0.01)
calf_used_available_final$ln_start_regencut <- log(calf_used_available_final$start_regencut+0.01)

calf_used_available_final$ln_end_wolfbuf <- log(calf_used_available_final$end_wolfbuf+0.01)
calf_used_available_final$ln_end_wolf <- log(calf_used_available_final$end_wolf+0.01)
calf_used_available_final$ln_start_wolfbuf <- log(calf_used_available_final$start_wolfbuf+0.01)
calf_used_available_final$ln_start_wolf <- log(calf_used_available_final$start_wolf+0.01)

calf_used_available_final$hour<-format(strptime(as.character(calf_used_available_final$t1), "%Y-%m-%d %H:%M"),"%H")
calf_used_available_final$hour <- as.numeric(calf_used_available_final$hour)
calf_used_available_final$sinhour <- sin((4*pi*(calf_used_available_final$hour-4))/24)
calf_used_available_final$end_landcover_Conifer <- as.numeric(paste(calf_used_available_final$end_landcover_Coniferous)) + as.numeric(paste(calf_used_available_final$end_landcover_Nonforest))
calf_used_available_final$check <- paste(calf_used_available_final$year,calf_used_available_final$name)
calf_used_available_final$lnSL[is.infinite(calf_used_available_final$lnSL)] = 0

#calf_used_available_final$end_cut <- calf_used_available_final$end_cutageclass_new+calf_used_available_final$end_cutageclass_regen
#calf_used_available_final$start_cut <- calf_used_available_final$start_cutageclass_new+calf_used_available_final$start_cutageclass_regen
calf_used_available_final$start_cutprop <- calf_used_available_final$start_newcut+calf_used_available_final$start_regencut
calf_used_available_final$end_cutprop <- calf_used_available_final$end_newcut+calf_used_available_final$end_regencut
  
#high/low
calf_used_available_final$end_wolfcat <- calf_used_available_final$end_wolfbuf
calf_used_available_final$end_wolfcat <- ifelse(calf_used_available_final$end_wolfcat > 0.4,1,0)
calf_used_available_final$start_wolfcat <- calf_used_available_final$start_wolfbuf
calf_used_available_final$start_wolfcat <- ifelse(calf_used_available_final$start_wolfcat > 0.4,1,0)

backup <- calf_used_available_final
calf_used_available_final <- backup

#with wolf
calf_used_available_final <- calf_used_available_final[!(calf_used_available_final$name=="18-13571"&calf_used_available_final$season=="Winter"),]
#calf_used_available_final <- calf_used_available_final[!(calf_used_available_final$name=="18-13573"&calf_used_available_final$season=="Winter"),]
calf_used_available_final <- calf_used_available_final[!(calf_used_available_final$name=="18-13563"&calf_used_available_final$season=="Summer"),]
calf_used_available_final <- calf_used_available_final[!(calf_used_available_final$name=="17-10153"&calf_used_available_final$season=="Winter"),]
#calf_used_available_final <- calf_used_available_final[!(calf_used_available_final$name=="18-14047"&calf_used_available_final$season=="Winter"),]


############### Check for collinearity ####################

correlation <- cor(calf_used_available_final[c(18:19,32:39,55:67)])
write.csv(correlation,'calf_vars_correlation.csv')

#remove weird calf
backup <- calf_used_available_final
calf_used_available_final <- backup

#-----------------------------------
########### RUN MODELS ###############
#-----------------------------------

#organize/scale data
year<-as.vector(2018:2020)
calf<-vector()
Season<-vector()
Year<-vector()
Model<-vector()
AIC<-vector()
Covariates<-vector()
beta<-vector()
SE<-vector()
p<-vector()

for (i in 1:length(year)){
  data<-calf_used_available_final %>% filter(Year==!!year[i])
  season<-unique(data$season)
  for (j in 1:length(season)){
    data2<-data %>% filter(season==!!season[j])
    name <- unique(data2$name)
    for (k in 1:length(name)){
    data3<-data2 %>% filter(name ==!!name[k])
    assign(paste(year[i],season[j],name[k],sep=" "),data3)
    if(nrow(data)>0){
      #Forage
      output<-clogit(used~lnSL+lnSL:sinhour+ln_end_water+end_NDVI+lnSL:start_NDVI+strata(stepid),data=data3)
      calf<-append(calf,rep(as.character(name[k]),length(output$coefficients)))
      Year<-append(Year,rep(year[i],length(output$coefficients)))
      Season<-append(Season,rep(as.character(season[j]),length(output$coefficients)))
      Model<-append(Model,rep("Forage",length(output$coefficients)))
      AIC<-append(AIC,rep(AIC(output),length(output$coefficients)))
      Covariates<-append(Covariates,names(output$coefficients))
      beta<-append(beta,coef(output))
      SE<-append(SE,coef(summary(output))[,"se(coef)"])
      p<-append(p,coef(summary(output))[,"Pr(>|z|)"])
      assign("Forage",output)
      
      #Predation
      output<-clogit(used~lnSL+lnSL:sinhour+end_wolf+lnSL:start_wolf+strata(stepid),data=data3)
      calf<-append(calf,rep(as.character(name[k]),length(output$coefficients)))
      Year<-append(Year,rep(year[i],length(output$coefficients)))
      Season<-append(Season,rep(as.character(season[j]),length(output$coefficients)))
      Model<-append(Model,rep("Predation",length(output$coefficients)))
      AIC<-append(AIC,rep(AIC(output),length(output$coefficients)))
      Covariates<-append(Covariates,names(output$coefficients))
      beta<-append(beta,coef(output))
      SE<-append(SE,coef(summary(output))[,"se(coef)"])
      p<-append(p,coef(summary(output))[,"Pr(>|z|)"])
      assign("Predation",output)
            
      #Roads
      output<-clogit(used~lnSL+lnSL:sinhour+end_roaddens+ln_end_roaddist+lnSL:ln_start_roaddist+lnSL:start_roaddens+strata(stepid),data=data3)
      calf<-append(calf,rep(as.character(name[k]),length(output$coefficients)))
      Year<-append(Year,rep(year[i],length(output$coefficients)))
      Season<-append(Season,rep(as.character(season[j]),length(output$coefficients)))
      Model<-append(Model,rep("Roads",length(output$coefficients)))
      AIC<-append(AIC,rep(AIC(output),length(output$coefficients)))
      Covariates<-append(Covariates,names(output$coefficients))
      beta<-append(beta,coef(output))
      SE<-append(SE,coef(summary(output))[,"se(coef)"])
      p<-append(p,coef(summary(output))[,"Pr(>|z|)"])
      assign("Roads",output)
      
      #Cuts
      output<-clogit(used~lnSL+lnSL:sinhour+end_newcut+end_regencut+lnSL:start_newcut+lnSL:start_regencut+strata(stepid),data=data3)
      calf<-append(calf,rep(as.character(name[k]),length(output$coefficients)))
      Year<-append(Year,rep(year[i],length(output$coefficients)))
      Season<-append(Season,rep(as.character(season[j]),length(output$coefficients)))
      Model<-append(Model,rep("Cuts",length(output$coefficients)))
      AIC<-append(AIC,rep(AIC(output),length(output$coefficients)))
      Covariates<-append(Covariates,names(output$coefficients))
      beta<-append(beta,coef(output))
      SE<-append(SE,coef(summary(output))[,"se(coef)"])
      p<-append(p,coef(summary(output))[,"Pr(>|z|)"])
      assign("Cuts",output)
      
      #Salvage
      output<-clogit(used~lnSL+lnSL:sinhour+end_roaddens+ln_end_roaddist+lnSL:ln_start_roaddist+lnSL:start_roaddens+end_newcut+end_regencut+lnSL:start_newcut+lnSL:start_regencut+strata(stepid),data=data3)
      calf<-append(calf,rep(as.character(name[k]),length(output$coefficients)))
      Year<-append(Year,rep(year[i],length(output$coefficients)))
      Season<-append(Season,rep(as.character(season[j]),length(output$coefficients)))
      Model<-append(Model,rep("Salvage",length(output$coefficients)))
      AIC<-append(AIC,rep(AIC(output),length(output$coefficients)))
      Covariates<-append(Covariates,names(output$coefficients))
      beta<-append(beta,coef(output))
      SE<-append(SE,coef(summary(output))[,"se(coef)"])
      p<-append(p,coef(summary(output))[,"Pr(>|z|)"])
      assign("Salvage",output)
      
      #Ecotrap1
      output<-clogit(used~lnSL+lnSL:sinhour+end_wolf+end_wolf:end_cutprop+lnSL:start_wolf+end_wolf:end_roaddens+end_wolf:ln_end_roaddist+end_newcut+end_regencut+lnSL:start_newcut+lnSL:start_regencut+end_roaddens+ln_end_roaddist+lnSL:ln_start_roaddist+lnSL:start_roaddens+strata(stepid),data=data3)
      calf<-append(calf,rep(as.character(name[k]),length(output$coefficients)))
      Year<-append(Year,rep(year[i],length(output$coefficients)))
      Season<-append(Season,rep(as.character(season[j]),length(output$coefficients)))
      Model<-append(Model,rep("Ecotrap",length(output$coefficients)))
      AIC<-append(AIC,rep(AIC(output),length(output$coefficients)))
      Covariates<-append(Covariates,names(output$coefficients))
      beta<-append(beta,coef(output))
      SE<-append(SE,coef(summary(output))[,"se(coef)"])
      p<-append(p,coef(summary(output))[,"Pr(>|z|)"])
      assign("Ecotrap",output)
      
      #Global
      output<-clogit(used~lnSL+lnSL:sinhour+ln_end_water+end_NDVI+lnSL:start_NDVI+ln_end_edgein+ln_end_edgeout+end_wolf+end_wolf:end_cutprop+lnSL:start_wolf+end_wolf:ln_end_roaddist+end_wolf:end_roaddens+end_newcut+end_regencut+lnSL:start_newcut+lnSL:start_regencut+end_roaddens+ln_end_roaddist+lnSL:ln_start_roaddist+lnSL:start_roaddens+strata(stepid),data=data3)
      calf<-append(calf,rep(as.character(name[k]),length(output$coefficients)))
      Year<-append(Year,rep(year[i],length(output$coefficients)))
      Season<-append(Season,rep(as.character(season[j]),length(output$coefficients)))
      Model<-append(Model,rep("Global",length(output$coefficients)))
      AIC<-append(AIC,rep(AIC(output),length(output$coefficients)))
      Covariates<-append(Covariates,names(output$coefficients))
      beta<-append(beta,coef(output))
      SE<-append(SE,coef(summary(output))[,"se(coef)"])
      p<-append(p,coef(summary(output))[,"Pr(>|z|)"])
      assign("Global",output)
    }
        print(paste(year[i],season[j],name[k],sep=" "))
    }

  }
}

test<-clogit(used~lnSL+lnSL:sinhour+ln_end_water+end_NDVI+lnSL:end_NDVI+ln_end_edgein+ln_end_edgeout+end_wolf+end_wolf:end_cutprop+lnSL:start_wolf+end_wolf:ln_end_roaddist+end_wolf:end_roaddens+end_newcut+end_regencut+lnSL:start_newcut+lnSL:start_regencut+end_roaddens+ln_end_roaddist+lnSL:ln_start_roaddist+lnSL:start_roaddens+strata(stepid)
       ,data=calf_used_available_final[calf_used_available_final$check=="2020 Winter 19-9086",])


#create base iSSA dataframe
base_results_issa<-as.data.frame(cbind(calf,Year,Season,Model,AIC,Covariates,beta,SE,p))
base_results_issa$AIC<-as.numeric(as.character(AIC))
base_results_issa$check <- paste(base_results_issa$Year, base_results_issa$Season,base_results_issa$calf)
calf_used_available_final$check <- paste(calf_used_available_final$year, calf_used_available_final$season,calf_used_available_final$name)
base_results_issa$beta <- as.numeric(as.character(base_results_issa$beta))
base_results_issa$SE <- as.numeric(as.character(base_results_issa$SE))
unique(levels(as.factor(calf_used_available_final$check)))
unique(levels(as.factor(base_results_issa$check)))
unique(levels(as.factor(base_results_issa$Covariates)))
test <- base_results_issa[base_results_issa$Model=="Global",]

######### Calculate and Plot AIC weights ###############

#make AIC dataframe
AIC_results<-base_results_issa[!duplicated(base_results_issa[,c(1:4)]),]
AIC_results$Model <- factor(AIC_results$Model)
levels(AIC_results$Model)

#split data by season into lists
AIC_results_split <- split(AIC_results, f = AIC_results$Season)

#order each season list
AIC_results_ordered <- lapply(AIC_results_split, function(x) {
                    x[order(x$calf,x$Year,x$AIC),]} )

#calculate delta AIC
delta_AIC<-vector()
AIC_weights<-vector()

for (i in 1:length(AIC_results_ordered)){
  result<-AIC_results_ordered[[i]]
  name<-unique(result$calf)

  for (j in 1:length(name)){
    data<-result[result$calf==name[j],]
    year<-unique(data$Year)
    
  for (k in 1:length(year)){
    data2<-data[data$Year==year[k],]
    if(nrow(data2)>0){
      delta<-data2$AIC-min(data2$AIC)
      delta_AIC<-append(delta_AIC,delta)
    }
    print(paste(name[j],"-",year[k]))
  }
}
}

#unlist data and bind delta AIC to dataset
AIC_results_ordered <- do.call(rbind, AIC_results_ordered)
AIC_results_ordered<-cbind(AIC_results_ordered,delta_AIC)

#determine likelihood and bind to dataset
likelihood<-exp(-0.5*AIC_results_ordered$delta_AIC)
AIC_results_ordered<-cbind(AIC_results_ordered,likelihood)

#relist data by season
AIC_results_ordered <- split(AIC_results_ordered, f = AIC_results$Season)

#create AIC weights
for (i in 1:length(AIC_results_ordered)){
  result<-AIC_results_ordered[[i]]
  name<-unique(result$calf)

  for (j in 1:length(name)){
    data<-result[result$calf==name[j],]
    year<-unique(data$Year)
    
  for (k in 1:length(year)){
    data2<-data[data$Year==year[k],]
    if(nrow(data2)>0){
      weight<-data2$likelihood/sum(data2$likelihood)
      AIC_weights<-append(AIC_weights,weight)
    }
    print(paste(name[j],"-",year[k]))
  }
}
}

#unlist data and bind to data frame
AIC_results_ordered <- do.call(rbind, AIC_results_ordered)
AIC_results_ordered <-cbind(AIC_results_ordered,AIC_weights)

#split data set into list by seasons
#AIC_results_ordered$Model <- factor(AIC_results_ordered$Model, levels = c("Forage","Roads","Cutblocks","Predation","Salvage\n logging","Natural\n features", "Ecological\n trap","Global"))
AIC_results_ordered$season <- factor(AIC_results_ordered$Season, levels = c("Summer","Winter"))

AIC_distributions <- ggplot(aes(Model,AIC_weights), data = AIC_results_ordered, width=2) + 
  geom_boxplot(aes(fill = Season),width=0.8,color="black", lwd = 1,
               outlier.shape = NA)+scale_fill_grey()+labs(y="AIC weights")+
  theme_bw(base_size = 20) +
  theme(axis.title = element_text(size=25),
        axis.text.x = element_text(size=20, colour = "black"),
        axis.text.y = element_text(size=20, colour = "black"),
        axis.line = element_line(colour = "black"),
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        panel.border = element_rect(linetype = "solid", colour = "black", size=2),
        panel.background = element_blank(),
        legend.title=element_text(size=25),
        legend.text=element_text(size=20),
        legend.key.size=unit(1, "cm"),
        legend.position=c(0.015,0.98), 
       legend.justification = c(0, 1),
       legend.background = element_blank(),
        legend.box.background = element_rect(colour = "white"))+
  guides(fill=guide_legend(ncol=1))
AIC_distributions

#alternative model selection
AIC_results_ordered[AIC_results_ordered$delta_AIC<2&AIC_results_ordered$Season=="Summer",]%>% group_by(Model) %>% summarise(no_rows=length(Model))
AIC_results_ordered[AIC_results_ordered$delta_AIC<2&AIC_results_ordered$Season=="Winter",]%>% group_by(Model) %>% summarise(no_rows=length(Model))


ggsave("D:\\OneDrive\\Documents\\Academic\\PhD\\Publications\\Calf iSSA\\Figures\\AIC_Weights.tiff", units="in", width=16, height=8, dpi=300, compression = 'lzw')

#---------------------------------------------------
########## Beta Coefficient Bootstrapping #########
#---------------------------------------------------

#Beta coeffs - males
calf_sex<-read.csv("calf_sex.csv")

#load sex_age info
results_sex<-merge(base_results_issa,calf_sex,by.x=c("calf","Year"),by.y=c("name","Year"),all.x=T)
results_sex$Model <- as.factor(paste(results_sex$Model))
results_sex$Sex <- as.factor(paste(results_sex$Sex))
results_males_summer <-results_sex[results_sex$Model=="Global"&results_sex$Sex=="M"&results_sex$Season=="Summer",]
results_males_winter <-results_sex[results_sex$Model=="Global"&results_sex$Sex=="M"&results_sex$Season=="Winter",]
results_females_summer <-results_sex[results_sex$Model=="Global"&results_sex$Sex=="F"&results_sex$Season=="Summer",]
results_females_winter <-results_sex[results_sex$Model=="Global"&results_sex$Sex=="F"&results_sex$Season=="Winter",]

#bootstrap males in summer
b.boot<-numeric(2000)
average<-vector()
results_males_summer$beta<-as.numeric(as.character(results_males_summer$beta))
results_males_summer$SE<-as.numeric(as.character(results_males_summer$SE))
covariates<-unique(results_males_summer$Covariates)
results_males_summer_betas<-as.data.frame(setNames(replicate(length(covariates),numeric(2000),simplify=F),covariates))

for(n in 1:ncol(results_males_summer_betas)){
  for(j in 1:length(b.boot)){
    calf_bstrap<-as.vector(sample(unique(results_males_summer$calf),length(unique(paste(results_males_summer$calf,results_males_summer$Year)))*2,replace=T))
    bstrap<-data.frame()
    for (i in 1:length(calf_bstrap)){
      x<-results_males_summer[results_males_summer$Covariates==covariates[n]&results_males_summer$calf==calf_bstrap[i],]
      x2<-x[sample(nrow(x),1),]
      bstrap<-rbind(bstrap,x2)
      median<-median(bstrap$beta)

    }
    average[j]<-median
  }
  results_males_summer_betas[,n]<-average
  print(paste(n))
}

assign(paste("pop_males_summer"),results_males_summer_betas)

#bootstrap males winter
b.boot<-numeric(2000)
average<-vector()
results_males_winter$beta<-as.numeric(as.character(results_males_winter$beta))
results_males_winter$SE<-as.numeric(as.character(results_males_winter$SE))
covariates_winter<-unique(results_males_winter$Covariates)
results_males_winter_betas<-as.data.frame(setNames(replicate(length(covariates_winter),numeric(2000),simplify=F),covariates_winter))

for(n in 1:ncol(results_males_winter_betas)){
  for(j in 1:length(b.boot)){
    calf_bstrap<-as.vector(sample(unique(results_males_winter$calf),length(unique(paste(results_males_winter$calf,results_males_winter$Year)))*2,replace=T))
    bstrap<-data.frame()
    for (i in 1:length(calf_bstrap)){
      x<-results_males_winter[results_males_winter$Covariates==covariates_winter[n]&results_males_winter$calf==calf_bstrap[i],]
      x2<-x[sample(nrow(x),1),]
      bstrap<-rbind(bstrap,x2)
      median<-median(bstrap$beta)

    }
    average[j]<-median
  }
  results_males_winter_betas[,n]<-average
  print(paste(n))
}

assign(paste("pop_males_winter"),results_males_winter_betas)


#bootstrap females summer
b.boot<-numeric(2000)
average<-vector()
results_females_summer$beta<-as.numeric(as.character(results_females_summer$beta))
results_females_summer$SE<-as.numeric(as.character(results_females_summer$SE))
covariates_summer<-unique(results_females_summer$Covariates)
results_females_summer_betas<-as.data.frame(setNames(replicate(length(covariates_summer),numeric(2000),simplify=F),covariates_summer))

for(n in 1:ncol(results_females_summer_betas)){
  for(j in 1:length(b.boot)){
    calf_bstrap<-as.vector(sample(unique(results_females_summer$calf),length(unique(paste(results_females_summer$calf,results_females_summer$Year)))*2,replace=T))
    bstrap<-data.frame()
    for (i in 1:length(calf_bstrap)){
      x<-results_females_summer[results_females_summer$Covariates==covariates_summer[n]&results_females_summer$calf==calf_bstrap[i],]
      x2<-x[sample(nrow(x),1),]
      bstrap<-rbind(bstrap,x2)
      median<-median(bstrap$beta)

    }
    average[j]<-median
  }
  results_females_summer_betas[,n]<-average
  print(paste(n))
}

assign(paste("pop_females_summer"),results_females_summer_betas)

#bootstrap females winter
b.boot<-numeric(2000)
average<-vector()
results_females_winter$beta<-as.numeric(as.character(results_females_winter$beta))
results_females_winter$SE<-as.numeric(as.character(results_females_winter$SE))
covariates_winter<-unique(results_females_winter$Covariates)
results_females_winter_betas<-as.data.frame(setNames(replicate(length(covariates_winter),numeric(2000),simplify=F),covariates_winter))

for(n in 1:ncol(results_females_winter_betas)){
  for(j in 1:length(b.boot)){
    calf_bstrap<-as.vector(sample(unique(results_females_winter$calf),length(unique(paste(results_females_winter$calf,results_females_winter$Year)))*2,replace=T))
    bstrap<-data.frame()
    for (i in 1:length(calf_bstrap)){
      x<-results_females_winter[results_females_winter$Covariates==covariates_winter[n]&results_females_winter$calf==calf_bstrap[i],]
      x2<-x[sample(nrow(x),1),]
      bstrap<-rbind(bstrap,x2)
      median<-median(bstrap$beta)

    }
    average[j]<-median
  }
  results_females_winter_betas[,n]<-average
  print(paste(n))
}

assign(paste("pop_females_winter"),results_females_winter_betas)

#-----------------------------------
########## Movement betas ##########
#-----------------------------------

#make betas data frame
movement_betas_summer_males<-cbind(pop_males_summer[,c(grep("lnSL", colnames(pop_males_summer)))])
movement_betas_winter_males<-cbind(pop_males_winter[,c(grep("lnSL", colnames(pop_males_winter)))])
movement_betas_summer_females<-cbind(pop_females_summer[,c(grep("lnSL", colnames(pop_females_summer)))])
movement_betas_winter_females<-cbind(pop_females_winter[,c(grep("lnSL", colnames(pop_females_winter)))])

#change to long format
movement_betas_males_summer_long<-stack(movement_betas_summer_males) #long form
movement_betas_males_summer_long$Sex <- "Male"
movement_betas_males_summer_long$Season <- "Summer"
movement_betas_males_winter_long<-stack(movement_betas_winter_males) #long form
movement_betas_males_winter_long$Sex <- "Male"
movement_betas_males_winter_long$Season <- "Winter"
movement_betas_females_summer_long<-stack(movement_betas_summer_females) #long form
movement_betas_females_summer_long$Sex <- "Female"
movement_betas_females_summer_long$Season <- "Summer"
movement_betas_females_winter_long<-stack(movement_betas_winter_females) #long form
movement_betas_females_winter_long$Sex <- "Female"
movement_betas_females_winter_long$Season <- "Winter"
movement_betas_long <- rbind(movement_betas_males_summer_long,movement_betas_males_winter_long,movement_betas_females_summer_long,movement_betas_females_winter_long)
colnames(movement_betas_long)<-c("Beta","Covariate","Sex","Season") ## rename columns
movement_betas_long$Beta<-as.numeric(as.character(movement_betas_long$Beta)) ##convert beta to numeric
movement_betas_long$Sex<-factor(movement_betas_long$Sex)
movement_betas_long$Season<-factor(movement_betas_long$Season)

#replace covariate names
movement_betas_long$Covariate<-as.character(movement_betas_long$Covariate)
unique(movement_betas_long$Covariate)
movement_betas_long$Covariate<-replace(movement_betas_long$Covariate,movement_betas_long$Covariate=="lnSL.ln_start_roaddist","lnSL:roaddist")
movement_betas_long$Covariate<-replace(movement_betas_long$Covariate,movement_betas_long$Covariate=="lnSL.start_newcut","lnSL:New cut")
movement_betas_long$Covariate<-replace(movement_betas_long$Covariate,movement_betas_long$Covariate=="lnSL.start_regencut","lnSL:Regen cut")
movement_betas_long$Covariate<-replace(movement_betas_long$Covariate,movement_betas_long$Covariate=="lnSL.tod_end","lnSL:Time")
movement_betas_long$Covariate<-replace(movement_betas_long$Covariate,movement_betas_long$Covariate=="lnSL.start_wolf","lnSL:Wolf")

#make covariate column into factor
movement_betas_long$Covariate<-as.factor(movement_betas_long$Covariate)
levels(movement_betas_long$Covariate)

### SUMMARY TABLE ###
betas_movement<-group_by(movement_betas_long,Season,Sex,Covariate) %>% summarise(lower = quantile(Beta,0.025),median = median(Beta),
                                                                                         upper = quantile(Beta,0.975))
ggplot(betas_movement,aes(x=Covariate, y=median,colour=Sex))+geom_errorbar(aes(ymin=lower,ymax=upper,width=.1))+geom_point()+facet_grid(~Season)
betas_movement$lower <- round(betas_movement$lower,digits=3)
betas_movement$median <- round(betas_movement$median,digits=3)
betas_movement$upper <- round(betas_movement$upper,digits=3)
write.table(betas_movement, file = "D:\\OneDrive\\Documents\\Academic\\PhD\\Publications\\Calf iSSA\\Figures\\movement betas.txt", sep = ",", quote = FALSE, row.names = F)

############ Plot all movement betas ##############

p_movement_betas<-ggplot(aes(y = Beta, x = Covariate), data = movement_betas_long, width=2) + 
  geom_boxplot(aes(fill = Sex),width=0.8,color="black", lwd = 1,
               outlier.shape = NA)+
  theme_bw(base_size = 20) +
  theme(axis.title = element_text(size=25),
        axis.text.x = element_text(size=10, colour = "black"),
        axis.text.y = element_text(size=20, colour = "black"),
        axis.line = element_line(colour = "black"),
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        panel.border = element_rect(linetype = "solid", colour = "black", size=2),
        panel.background = element_blank(),
        legend.title=element_text(size=20),
        legend.text=element_text(size=20),
        legend.key.size=unit(1, "cm"),
        legend.position=c(0.8,0.98), 
       legend.justification = c(0, 1),
       legend.background = element_blank(),
        legend.box.background = element_rect(colour = "black")) +
        geom_hline(yintercept=0,col="red",lwd=2)+
  scale_fill_viridis(discrete=TRUE)+ theme(legend.background = element_blank(),
        legend.box.background = element_rect(colour = "white"))+facet_grid(~Season)
p_movement_betas

ggsave("D:\\OneDrive\\Documents\\Academic\\PhD\\Publications\\Calf iSSA\\Figures\\Movement betas.tiff", units="in", width=16, height=8, dpi=300, compression = 'lzw')

#-----------------------------------
####### HABITAT BETAS ########
#-----------------------------------

#make betas data frame
habitat_betas_summer_males<-cbind(pop_males_summer[,-c(grep("lnSL", colnames(pop_males_summer)))])
habitat_betas_winter_males<-cbind(pop_males_winter[,-c(grep("lnSL", colnames(pop_males_winter)))])
habitat_betas_summer_females<-cbind(pop_females_summer[,-c(grep("lnSL", colnames(pop_females_summer)))])
habitat_betas_winter_females<-cbind(pop_females_winter[,-c(grep("lnSL", colnames(pop_females_winter)))])

#change to long format
habitat_betas_males_summer_long<-stack(habitat_betas_summer_males) #long form
habitat_betas_males_summer_long$Sex <- "Male"
habitat_betas_males_summer_long$Season <- "Summer"
habitat_betas_males_winter_long<-stack(habitat_betas_winter_males) #long form
habitat_betas_males_winter_long$Sex <- "Male"
habitat_betas_males_winter_long$Season <- "Winter"
habitat_betas_females_summer_long<-stack(habitat_betas_summer_females) #long form
habitat_betas_females_summer_long$Sex <- "Female"
habitat_betas_females_summer_long$Season <- "Summer"
habitat_betas_females_winter_long<-stack(habitat_betas_winter_females) #long form
habitat_betas_females_winter_long$Sex <- "Female"
habitat_betas_females_winter_long$Season <- "Winter"
habitat_betas_long <- rbind(habitat_betas_males_summer_long,habitat_betas_males_winter_long,habitat_betas_females_summer_long,habitat_betas_females_winter_long)
colnames(habitat_betas_long)<-c("Beta","Covariate","Sex","Season") ## rename columns
habitat_betas_long$Beta<-as.numeric(as.character(habitat_betas_long$Beta)) ##convert beta to numeric
habitat_betas_long$Sex<-factor(habitat_betas_long$Sex)
habitat_betas_long$Season<-factor(habitat_betas_long$Season)

#replace covariate names
habitat_betas_long$Covariate<-as.character(habitat_betas_long$Covariate)
unique(habitat_betas_long$Covariate)
habitat_betas_long$Covariate<-replace(habitat_betas_long$Covariate,habitat_betas_long$Covariate=="end_newcut","New cut") #replaces text
habitat_betas_long$Covariate<-replace(habitat_betas_long$Covariate,habitat_betas_long$Covariate=="end_regencut","Regen cut")
habitat_betas_long$Covariate<-replace(habitat_betas_long$Covariate,habitat_betas_long$Covariate=="ln_end_edgein","Edge in")
habitat_betas_long$Covariate<-replace(habitat_betas_long$Covariate,habitat_betas_long$Covariate=="ln_end_edgeout","Edge out")
habitat_betas_long$Covariate<-replace(habitat_betas_long$Covariate,habitat_betas_long$Covariate=="conifer","Conifer")
habitat_betas_long$Covariate<-replace(habitat_betas_long$Covariate,habitat_betas_long$Covariate=="deciduous","Deciduous")
habitat_betas_long$Covariate<-replace(habitat_betas_long$Covariate,habitat_betas_long$Covariate=="mixedforest","Mixed forest")
habitat_betas_long$Covariate<-replace(habitat_betas_long$Covariate,habitat_betas_long$Covariate=="ln_end_water","Water")
habitat_betas_long$Covariate<-replace(habitat_betas_long$Covariate,habitat_betas_long$Covariate=="end_NDVI","NDVI")
habitat_betas_long$Covariate<-replace(habitat_betas_long$Covariate,habitat_betas_long$Covariate=="end_wolf.end_cutprop","Wolf:Cut")
habitat_betas_long$Covariate<-replace(habitat_betas_long$Covariate,habitat_betas_long$Covariate=="end_wolf.end_roaddens","Wolf:Roaddens")
habitat_betas_long$Covariate<-replace(habitat_betas_long$Covariate,habitat_betas_long$Covariate=="end_wolf.ln_end_roaddist","Wolf:Roaddist")
habitat_betas_long$Covariate<-replace(habitat_betas_long$Covariate,habitat_betas_long$Covariate=="end_roaddens","Roaddens")
habitat_betas_long$Covariate<-replace(habitat_betas_long$Covariate,habitat_betas_long$Covariate=="ln_end_roaddist","Roaddist")
habitat_betas_long$Covariate<-replace(habitat_betas_long$Covariate,habitat_betas_long$Covariate=="end_wolfbuf","Wolf")
habitat_betas_long$Covariate<-replace(habitat_betas_long$Covariate,habitat_betas_long$Covariate=="end_wolfbuf.end_cut","Wolf:Cut")
habitat_betas_long$Covariate<-replace(habitat_betas_long$Covariate,habitat_betas_long$Covariate=="end_wolf.ln_end_roaddist","Wolf:Regen")
habitat_betas_long$Covariate<-replace(habitat_betas_long$Covariate,habitat_betas_long$Covariate=="end_wolf.end_roaddens","Wolf:Roaddens")
habitat_betas_long$Covariate<-replace(habitat_betas_long$Covariate,habitat_betas_long$Covariate=="end_wolf.ln_end_roaddist","Wolf:Roaddist")
habitat_betas_long$Covariate<-replace(habitat_betas_long$Covariate,habitat_betas_long$Covariate=="end_wolfbuf.end_roaddens","Wolf:Roaddens")
habitat_betas_long$Covariate<-as.factor(habitat_betas_long$Covariate)
levels(habitat_betas_long$Covariate)

### SUMMARY TABLE ###
betas_habitat<-group_by(habitat_betas_long,Season,Sex,Covariate) %>% summarise(lower = quantile(Beta,0.025),median = median(Beta),
                                                                                         upper = quantile(Beta,0.975))
ggplot(betas_habitat,aes(x=Covariate, y=median,colour=Sex))+geom_errorbar(aes(ymin=lower,ymax=upper,width=.1))+geom_point()+facet_grid(~Season)
betas_habitat$lower <- round(betas_habitat$lower,digits=3)
betas_habitat$median <- round(betas_habitat$median,digits=3)
betas_habitat$upper <- round(betas_habitat$upper,digits=3)
write.table(betas_habitat, file = "D:\\OneDrive\\Documents\\Academic\\PhD\\Publications\\Calf iSSA\\Figures\\habitat betas.txt", sep = ",", quote = FALSE, row.names = F)

p_habitat_betas<-ggplot(aes(y = Beta, x = Covariate), data = habitat_betas_long, width=2) + 
  geom_boxplot(aes(fill = Sex),width=0.8,color="black", lwd = 0.8,
               outlier.shape = NA)+
  theme_bw(base_size = 20) +
  theme(axis.title = element_text(size=25),
        axis.text.x = element_text(size=10, colour = "black"),
        axis.text.y = element_text(size=20, colour = "black"),
        axis.line = element_line(colour = "black"),
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        panel.border = element_rect(linetype = "solid", colour = "black", size=2),
        panel.background = element_blank(),
        legend.title=element_text(size=20),
        legend.text=element_text(size=20),
        legend.key.size=unit(1, "cm"),
        legend.position=c(0.01,0.99), 
       legend.justification = c(0, 1),
       legend.background = element_blank(),
        legend.box.background = element_rect(colour = "black")) +
        geom_hline(yintercept=0,col="red",lwd=2)+ 
  ylim(-5, 2)+
  scale_fill_viridis(discrete=TRUE)+ theme(legend.background = element_blank(),
        legend.box.background = element_rect(colour = "white"))
p_habitat_betas

ggsave("D:\\OneDrive\\Documents\\Academic\\PhD\\Publications\\iSSA\\Figures\\habitat landcover betas.tiff", plot=habitat_landcover_annual, units="in", width=17, height=8, dpi=600, compression = 'lzw')

-----------------------------------
########### STEP LENGTH RESULTS - ROAD DIST BY CUTAGE ##################
-----------------------------------

##### Step length for covariates by season for new and regen ###############
#spring
slength_spring<-as.numeric(as.character(results_males_spring[results_males_spring$Covariates=="lnSL",7]))
slength_lnslroaddist_spring<-as.numeric(as.character(results_males_spring[results_males_spring$Covariates=="lnSL:ln_start_roaddist",7]))
slength_lnslsinhour_spring<-as.numeric(as.character(results_males_spring[results_males_spring$Covariates=="lnSL:sinhour",7]))
slength_lnslroaddens_spring<-as.numeric(as.character(results_males_spring[results_males_spring$Covariates=="lnSL:start_roaddens",7]))
slength_lnslnewcut_spring<-as.numeric(as.character(results_males_spring[results_males_spring$Covariates=="lnSL:start_cutageclass_new1",7]))
slength_lnslregencut_spring<-as.numeric(as.character(results_males_spring[results_males_spring$Covariates=="lnSL:start_cutageclass_regen1",7]))
SL_males_road_regen_spring<-unique(paste(results_males_spring$calf,results_males_spring$Year))
SL_males_road_new_spring<-unique(paste(results_males_spring$calf,results_males_spring$Year))
SL_males_roaddens_regen_spring<-unique(paste(results_males_spring$calf,results_males_spring$Year))
SL_males_roaddens_new_spring<-unique(paste(results_males_spring$calf,results_males_spring$Year))

#earlysum
slength_earlysum<-as.numeric(as.character(results_males_earlysum[results_males_earlysum$Covariates=="lnSL",7]))
slength_lnslroaddist_earlysum<-as.numeric(as.character(results_males_earlysum[results_males_earlysum$Covariates=="lnSL:ln_start_roaddist",7]))
slength_lnslsinhour_earlysum<-as.numeric(as.character(results_males_earlysum[results_males_earlysum$Covariates=="lnSL:sinhour",7]))
slength_lnslroaddens_earlysum<-as.numeric(as.character(results_males_earlysum[results_males_earlysum$Covariates=="lnSL:start_roaddens",7]))
slength_lnslnewcut_earlysum<-as.numeric(as.character(results_males_earlysum[results_males_earlysum$Covariates=="lnSL:start_cutageclass_new1",7]))
slength_lnslregencut_earlysum<-as.numeric(as.character(results_males_earlysum[results_males_earlysum$Covariates=="lnSL:start_cutageclass_regen1",7]))
SL_males_road_regen_earlysum<-unique(paste(results_males_earlysum$calf,results_males_earlysum$Year))
SL_males_road_new_earlysum<-unique(paste(results_males_earlysum$calf,results_males_earlysum$Year))
SL_males_roaddens_regen_earlysum<-unique(paste(results_males_earlysum$calf,results_males_earlysum$Year))
SL_males_roaddens_new_earlysum<-unique(paste(results_males_earlysum$calf,results_males_earlysum$Year))

#latesum
slength_latesum<-as.numeric(as.character(results_males_latesum[results_males_latesum$Covariates=="lnSL",7]))
slength_lnslroaddist_latesum<-as.numeric(as.character(results_males_latesum[results_males_latesum$Covariates=="lnSL:ln_start_roaddist",7]))
slength_lnslsinhour_latesum<-as.numeric(as.character(results_males_latesum[results_males_latesum$Covariates=="lnSL:sinhour",7]))
slength_lnslroaddens_latesum<-as.numeric(as.character(results_males_latesum[results_males_latesum$Covariates=="lnSL:start_roaddens",7]))
slength_lnslnewcut_latesum<-as.numeric(as.character(results_males_latesum[results_males_latesum$Covariates=="lnSL:start_cutageclass_new1",7]))
slength_lnslregencut_latesum<-as.numeric(as.character(results_males_latesum[results_males_latesum$Covariates=="lnSL:start_cutageclass_regen1",7]))
SL_males_road_regen_latesum<-unique(paste(results_males_latesum$calf,results_males_latesum$Year))
SL_males_road_new_latesum<-unique(paste(results_males_latesum$calf,results_males_latesum$Year))
SL_males_roaddens_regen_latesum<-unique(paste(results_males_latesum$calf,results_males_latesum$Year))
SL_males_roaddens_new_latesum<-unique(paste(results_males_latesum$calf,results_males_latesum$Year))

#autumn
slength_autumn<-as.numeric(as.character(results_males_autumn[results_males_autumn$Covariates=="lnSL",7]))
slength_lnslroaddist_autumn<-as.numeric(as.character(results_males_autumn[results_males_autumn$Covariates=="lnSL:ln_start_roaddist",7]))
slength_lnslsinhour_autumn<-as.numeric(as.character(results_males_autumn[results_males_autumn$Covariates=="lnSL:sinhour",7]))
slength_lnslroaddens_autumn<-as.numeric(as.character(results_males_autumn[results_males_autumn$Covariates=="lnSL:start_roaddens",7]))
slength_lnslnewcut_autumn<-as.numeric(as.character(results_males_autumn[results_males_autumn$Covariates=="lnSL:start_cutageclass_new1",7]))
slength_lnslregencut_autumn<-as.numeric(as.character(results_males_autumn[results_males_autumn$Covariates=="lnSL:start_cutageclass_regen1",7]))
SL_males_road_regen_autumn<-unique(paste(results_males_autumn$calf,results_males_autumn$Year))
SL_males_road_new_autumn<-unique(paste(results_males_autumn$calf,results_males_autumn$Year))
SL_males_roaddens_regen_autumn<-unique(paste(results_males_autumn$calf,results_males_autumn$Year))
SL_males_roaddens_new_autumn<-unique(paste(results_males_autumn$calf,results_males_autumn$Year))

#winter
slength_winter<-as.numeric(as.character(results_males_winter[results_males_winter$Covariates=="lnSL",7]))
slength_lnslroaddist_winter<-as.numeric(as.character(results_males_winter[results_males_winter$Covariates=="lnSL:ln_start_roaddist",7]))
slength_lnslsinhour_winter<-as.numeric(as.character(results_males_winter[results_males_winter$Covariates=="lnSL:sinhour",7]))
slength_lnslroaddens_winter<-as.numeric(as.character(results_males_winter[results_males_winter$Covariates=="lnSL:start_roaddens",7]))
slength_lnslnewcut_winter<-as.numeric(as.character(results_males_winter[results_males_winter$Covariates=="lnSL:start_cutageclass_new1",7]))
slength_lnslregencut_winter<-as.numeric(as.character(results_males_winter[results_males_winter$Covariates=="lnSL:start_cutageclass_regen1",7]))
SL_males_road_regen_winter<-unique(paste(results_males_winter$calf,results_males_winter$Year))
SL_males_road_new_winter<-unique(paste(results_males_winter$calf,results_males_winter$Year))
SL_males_roaddens_regen_winter<-unique(paste(results_males_winter$calf,results_males_winter$Year))
SL_males_roaddens_new_winter<-unique(paste(results_males_winter$calf,results_males_winter$Year))

############ create responses for each calf for new and regen ##############

#spring
calf_used_available_final_spring <- calf_used_available_final[calf_used_available_final$season=="spring",]
calf_used_final_spring <- calf_used_available_final_spring[calf_used_available_final_spring$used==1,]
calf_spring_sl <- calf_used_final_spring$sl/1000
calf_spring_gamma<-fitdistr(calf_spring_sl,"gamma", lower=0.001)
d_road_spring<-seq(min(calf_used_available_final$ln_start_roaddist),quantile(calf_used_available_final$ln_start_roaddist,1),length.out = 100)

for(i in 1:length(d_road_spring)){
  y_slength_road_regen_spring<-(1/calf_spring_gamma$estimate[2])*(calf_spring_gamma$estimate[1] + 
                                              slength_spring +
                                              (slength_lnslsinhour_spring*mean(calf_used_available_final$sinhour)) +
                                                (slength_lnslroaddens_spring*mean(calf_used_available_final$start_roaddens)) + (slength_lnslnewcut_spring*0)+(slength_lnslregencut_spring*1)+
                                                (slength_lnslroaddist_spring)*d_road_spring[i])
  y_slength_road_new_spring<-(1/calf_spring_gamma$estimate[2])*(calf_spring_gamma$estimate[1] + 
                                              slength_spring +
                                              (slength_lnslsinhour_spring*mean(calf_used_available_final$sinhour))+
                                                (slength_lnslroaddens_spring*mean(calf_used_available_final$start_roaddens))+(slength_lnslnewcut_spring*1)+(slength_lnslregencut_spring*0) + 
                                                (slength_lnslroaddist_spring)*d_road_spring[i])

  SL_males_road_regen_spring<-as.data.frame(cbind(SL_males_road_regen_spring,y_slength_road_regen_spring))
  SL_males_road_new_spring<-as.data.frame(cbind(SL_males_road_new_spring,y_slength_road_new_spring))
}

SL_males_road_regen_spring[,2]<-as.numeric(as.character(SL_males_road_regen_spring[,2]))
SL_males_road_new_spring[,2]<-as.numeric(as.character(SL_males_road_new_spring[,2]))

#earlysum
calf_used_available_final_earlysum <- calf_used_available_final[calf_used_available_final$season=="earlysum",]
calf_used_final_earlysum <- calf_used_available_final_earlysum[calf_used_available_final_earlysum$used==1,]
calf_earlysum_sl <- calf_used_final_earlysum$sl/1000
calf_earlysum_gamma<-fitdistr(calf_earlysum_sl,"gamma", lower=0.001)
d_road_earlysum<-seq(min(calf_used_available_final$ln_start_roaddist),quantile(calf_used_available_final$ln_start_roaddist,1),length.out = 100)

for(i in 1:length(d_road_earlysum)){
  y_slength_road_regen_earlysum<-(1/calf_earlysum_gamma$estimate[2])*(calf_earlysum_gamma$estimate[1] + 
                                              slength_earlysum +
                                              (slength_lnslsinhour_earlysum*mean(calf_used_available_final$sinhour)) +
                                                (slength_lnslroaddens_earlysum*mean(calf_used_available_final$start_roaddens)) + (slength_lnslnewcut_earlysum*0)+(slength_lnslregencut_earlysum*1)+
                                                (slength_lnslroaddist_earlysum)*d_road_earlysum[i])
  y_slength_road_new_earlysum<-(1/calf_earlysum_gamma$estimate[2])*(calf_earlysum_gamma$estimate[1] + 
                                              slength_earlysum +
                                              (slength_lnslsinhour_earlysum*mean(calf_used_available_final$sinhour))+
                                                (slength_lnslroaddens_earlysum*mean(calf_used_available_final$start_roaddens))+(slength_lnslnewcut_earlysum*1)+(slength_lnslregencut_earlysum*0) + 
                                                (slength_lnslroaddist_earlysum)*d_road_earlysum[i])

  SL_males_road_regen_earlysum<-as.data.frame(cbind(SL_males_road_regen_earlysum,y_slength_road_regen_earlysum))
  SL_males_road_new_earlysum<-as.data.frame(cbind(SL_males_road_new_earlysum,y_slength_road_new_earlysum))
}

SL_males_road_regen_earlysum[,2]<-as.numeric(as.character(SL_males_road_regen_earlysum[,2]))
SL_males_road_new_earlysum[,2]<-as.numeric(as.character(SL_males_road_new_earlysum[,2]))

#latesum
calf_used_available_final_latesum <- calf_used_available_final[calf_used_available_final$season=="latesum",]
calf_used_final_latesum <- calf_used_available_final_latesum[calf_used_available_final_latesum$used==1,]
calf_latesum_sl <- calf_used_final_latesum$sl/1000
calf_latesum_gamma<-fitdistr(calf_latesum_sl,"gamma", lower=0.001)
d_road_latesum<-seq(min(calf_used_available_final$ln_start_roaddist),quantile(calf_used_available_final$ln_start_roaddist,1),length.out = 100)

for(i in 1:length(d_road_latesum)){
  y_slength_road_regen_latesum<-(1/calf_latesum_gamma$estimate[2])*(calf_latesum_gamma$estimate[1] + 
                                              slength_latesum +
                                              (slength_lnslsinhour_latesum*mean(calf_used_available_final$sinhour)) +
                                                (slength_lnslroaddens_latesum*mean(calf_used_available_final$start_roaddens)) + (slength_lnslnewcut_latesum*0)+(slength_lnslregencut_latesum*1)+
                                                (slength_lnslroaddist_latesum)*d_road_latesum[i])
  y_slength_road_new_latesum<-(1/calf_latesum_gamma$estimate[2])*(calf_latesum_gamma$estimate[1] + 
                                              slength_latesum +
                                              (slength_lnslsinhour_latesum*mean(calf_used_available_final$sinhour))+
                                                (slength_lnslroaddens_latesum*mean(calf_used_available_final$start_roaddens))+(slength_lnslnewcut_latesum*1)+(slength_lnslregencut_latesum*0) + 
                                                (slength_lnslroaddist_latesum)*d_road_latesum[i])

  SL_males_road_regen_latesum<-as.data.frame(cbind(SL_males_road_regen_latesum,y_slength_road_regen_latesum))
  SL_males_road_new_latesum<-as.data.frame(cbind(SL_males_road_new_latesum,y_slength_road_new_latesum))
}

SL_males_road_regen_latesum[,2]<-as.numeric(as.character(SL_males_road_regen_latesum[,2]))
SL_males_road_new_latesum[,2]<-as.numeric(as.character(SL_males_road_new_latesum[,2]))

#autumn
calf_used_available_final_autumn <- calf_used_available_final[calf_used_available_final$season=="autumn",]
calf_used_final_autumn <- calf_used_available_final_autumn[calf_used_available_final_autumn$used==1,]
calf_autumn_sl <- calf_used_final_autumn$sl/1000
calf_autumn_gamma<-fitdistr(calf_autumn_sl,"gamma", lower=0.001)
d_road_autumn<-seq(min(calf_used_available_final$ln_start_roaddist),quantile(calf_used_available_final$ln_start_roaddist,1),length.out = 100)

for(i in 1:length(d_road_autumn)){
  y_slength_road_regen_autumn<-(1/calf_autumn_gamma$estimate[2])*(calf_autumn_gamma$estimate[1] + 
                                              slength_autumn +
                                              (slength_lnslsinhour_autumn*mean(calf_used_available_final$sinhour)) +
                                                (slength_lnslroaddens_autumn*mean(calf_used_available_final$start_roaddens)) + (slength_lnslnewcut_autumn*0)+(slength_lnslregencut_autumn*1)+
                                                (slength_lnslroaddist_autumn)*d_road_autumn[i])
  y_slength_road_new_autumn<-(1/calf_autumn_gamma$estimate[2])*(calf_autumn_gamma$estimate[1] + 
                                              slength_autumn +
                                              (slength_lnslsinhour_autumn*mean(calf_used_available_final$sinhour)) +
                                                (slength_lnslroaddens_autumn*mean(calf_used_available_final$start_roaddens))+ (slength_lnslnewcut_autumn*1)+ (slength_lnslregencut_autumn*0) + 
                                                (slength_lnslroaddist_autumn)*d_road_autumn[i])

  SL_males_road_regen_autumn<-as.data.frame(cbind(SL_males_road_regen_autumn,y_slength_road_regen_autumn))
  SL_males_road_new_autumn<-as.data.frame(cbind(SL_males_road_new_autumn,y_slength_road_new_autumn))
}

SL_males_road_regen_autumn[,2]<-as.numeric(as.character(SL_males_road_regen_autumn[,2]))
SL_males_road_new_autumn[,2]<-as.numeric(as.character(SL_males_road_new_autumn[,2]))

#winter
calf_used_available_final_winter <- calf_used_available_final[calf_used_available_final$season=="winter",]
calf_used_final_winter <- calf_used_available_final_winter[calf_used_available_final_winter$used==1,]
calf_winter_sl <- calf_used_final_winter$sl/1000
calf_winter_gamma<-fitdistr(calf_winter_sl,"gamma", lower=0.001)
d_road_winter<-seq(min(calf_used_available_final$ln_start_roaddist),quantile(calf_used_available_final$ln_start_roaddist,1),length.out = 100)

for(i in 1:length(d_road_winter)){
  y_slength_road_regen_winter<-(1/calf_winter_gamma$estimate[2])*(calf_winter_gamma$estimate[1] + 
                                              slength_winter +
                                              (slength_lnslsinhour_winter*mean(calf_used_available_final$sinhour)) +
                                                (slength_lnslroaddens_winter*mean(calf_used_available_final$start_roaddens)) + (slength_lnslnewcut_winter*0)+(slength_lnslregencut_winter*1)+
                                                (slength_lnslroaddist_winter)*d_road_winter[i])
  y_slength_road_new_winter<-(1/calf_winter_gamma$estimate[2])*(calf_winter_gamma$estimate[1] + 
                                              slength_winter +
                                              (slength_lnslsinhour_winter*mean(calf_used_available_final$sinhour)) +
                                                (slength_lnslroaddens_winter*mean(calf_used_available_final$start_roaddens))+ (slength_lnslnewcut_winter*1)+ (slength_lnslregencut_winter*0) + 
                                                (slength_lnslroaddist_winter)*d_road_winter[i])

  SL_males_road_regen_winter<-as.data.frame(cbind(SL_males_road_regen_winter,y_slength_road_regen_winter))
  SL_males_road_new_winter<-as.data.frame(cbind(SL_males_road_new_winter,y_slength_road_new_winter))
}

SL_males_road_regen_winter[,2]<-as.numeric(as.character(SL_males_road_regen_winter[,2]))
SL_males_road_new_winter[,2]<-as.numeric(as.character(SL_males_road_new_winter[,2]))


############## BOOTSTRAPPED VALUES FOR ERROR RIBBONS #################

########### bootstrap for calfs at each d_trail value - regen #################

#spring
average_regen_spring<-data.frame(matrix(NA, nrow = 200, ncol = 100))
b.boot<-1:200
for(i in 1:length(b.boot)){
  calf_bstrap<-as.vector(sample(unique(SL_males_road_regen_spring[,1]),7,replace=TRUE))
  bstrap<-data.frame()
  for (j in 1:length(calf_bstrap)){
    x<-SL_males_road_regen_spring[SL_males_road_regen_spring[,1]==calf_bstrap[j],]
    x2<-x[sample(nrow(x),1),]
    bstrap<-rbind(bstrap,x2)
    mean<-colMeans(bstrap[,2:101])
    average_regen_spring[i,]<-mean
  }
}

#earlysum
average_regen_earlysum<-data.frame(matrix(NA, nrow = 200, ncol = 100))
b.boot<-1:200
for(i in 1:length(b.boot)){
  calf_bstrap<-as.vector(sample(unique(SL_males_road_regen_earlysum[,1]),7,replace=TRUE))
  bstrap<-data.frame()
  for (j in 1:length(calf_bstrap)){
    x<-SL_males_road_regen_earlysum[SL_males_road_regen_earlysum[,1]==calf_bstrap[j],]
    x2<-x[sample(nrow(x),1),]
    bstrap<-rbind(bstrap,x2)
    mean<-colMeans(bstrap[,2:101])
    average_regen_earlysum[i,]<-mean
  }
}

#latesum
average_regen_latesum<-data.frame(matrix(NA, nrow = 200, ncol = 100))
b.boot<-1:200
for(i in 1:length(b.boot)){
  calf_bstrap<-as.vector(sample(unique(SL_males_road_regen_latesum[,1]),7,replace=TRUE))
  bstrap<-data.frame()
  for (j in 1:length(calf_bstrap)){
    x<-SL_males_road_regen_latesum[SL_males_road_regen_latesum[,1]==calf_bstrap[j],]
    x2<-x[sample(nrow(x),1),]
    bstrap<-rbind(bstrap,x2)
    mean<-colMeans(bstrap[,2:101])
    average_regen_latesum[i,]<-mean
  }
}

#autumn
average_regen_autumn<-data.frame(matrix(NA, nrow = 200, ncol = 100))
b.boot<-1:200
for(i in 1:length(b.boot)){
  calf_bstrap<-as.vector(sample(unique(SL_males_road_regen_autumn[,1]),7,replace=TRUE))
  bstrap<-data.frame()
  for (j in 1:length(calf_bstrap)){
    x<-SL_males_road_regen_autumn[SL_males_road_regen_autumn[,1]==calf_bstrap[j],]
    x2<-x[sample(nrow(x),1),]
    bstrap<-rbind(bstrap,x2)
    mean<-colMeans(bstrap[,2:101])
    average_regen_autumn[i,]<-mean
  }
}

#winter
average_regen_winter<-data.frame(matrix(NA, nrow = 200, ncol = 100))
b.boot<-1:200
for(i in 1:length(b.boot)){
  calf_bstrap<-as.vector(sample(unique(SL_males_road_regen_winter[,1]),7,replace=TRUE))
  bstrap<-data.frame()
  for (j in 1:length(calf_bstrap)){
    x<-SL_males_road_regen_winter[SL_males_road_regen_winter[,1]==calf_bstrap[j],]
    x2<-x[sample(nrow(x),1),]
    bstrap<-rbind(bstrap,x2)
    mean<-colMeans(bstrap[,2:101])
    average_regen_winter[i,]<-mean
  }
}


########### plot median and percentiles - regen #####################

#spring
SL_males_road_regen_spring<-melt(average_regen_spring[c(1:200),])
d_road_spring1<-rep(d_road_spring,each=200)

SL_males_road_regen_spring<-as.data.frame(cbind(SL_males_road_regen_spring,d_road_spring1))

SL_males_road_regen_final_spring<-SL_males_road_regen_spring %>% group_by(d_road_spring1) %>%
  summarise(`5%`=quantile(value, probs=0.025),
            `50%`=quantile(value, probs=0.5),
            `95%`=quantile(value, probs=0.975),
            avg=mean(value),
            n=n())
SL_males_road_regen_final_spring$season <- "spring"
names(SL_males_road_regen_final_spring)[1] <- "d_road"

#earlysum
SL_males_road_regen_earlysum<-melt(average_regen_earlysum[c(1:200),])
d_road_earlysum1<-rep(d_road_earlysum,each=200)

SL_males_road_regen_earlysum<-as.data.frame(cbind(SL_males_road_regen_earlysum,d_road_earlysum1))

SL_males_road_regen_final_earlysum<-SL_males_road_regen_earlysum %>% group_by(d_road_earlysum1) %>%
  summarise(`5%`=quantile(value, probs=0.025),
            `50%`=quantile(value, probs=0.5),
            `95%`=quantile(value, probs=0.975),
            avg=mean(value),
            n=n())
SL_males_road_regen_final_earlysum$season <- "earlysum"
names(SL_males_road_regen_final_earlysum)[1] <- "d_road"

#latesum
SL_males_road_regen_latesum<-melt(average_regen_latesum[c(1:200),])
d_road_latesum1<-rep(d_road_latesum,each=200)

SL_males_road_regen_latesum<-as.data.frame(cbind(SL_males_road_regen_latesum,d_road_latesum1))

SL_males_road_regen_final_latesum<-SL_males_road_regen_latesum %>% group_by(d_road_latesum1) %>%
  summarise(`5%`=quantile(value, probs=0.025),
            `50%`=quantile(value, probs=0.5),
            `95%`=quantile(value, probs=0.975),
            avg=mean(value),
            n=n())
SL_males_road_regen_final_latesum$season <- "latesum"
names(SL_males_road_regen_final_latesum)[1] <- "d_road"

#autumn
SL_males_road_regen_autumn<-melt(average_regen_autumn[c(1:200),])
d_road_autumn1<-rep(d_road_autumn,each=200)

SL_males_road_regen_autumn<-as.data.frame(cbind(SL_males_road_regen_autumn,d_road_autumn1))

SL_males_road_regen_final_autumn<-SL_males_road_regen_autumn %>% group_by(d_road_autumn1) %>%
  summarise(`5%`=quantile(value, probs=0.025),
            `50%`=quantile(value, probs=0.5),
            `95%`=quantile(value, probs=0.975),
            avg=mean(value),
            n=n())
SL_males_road_regen_final_autumn$season <- "autumn"
names(SL_males_road_regen_final_autumn)[1] <- "d_road"

#winter
SL_males_road_regen_winter<-melt(average_regen_winter[c(1:200),])
d_road_winter1<-rep(d_road_winter,each=200)

SL_males_road_regen_winter<-as.data.frame(cbind(SL_males_road_regen_winter,d_road_winter1))

SL_males_road_regen_final_winter<-SL_males_road_regen_winter %>% group_by(d_road_winter1) %>%
  summarise(`5%`=quantile(value, probs=0.025),
            `50%`=quantile(value, probs=0.5),
            `95%`=quantile(value, probs=0.975),
            avg=mean(value),
            n=n())
SL_males_road_regen_final_winter$season <- "winter"
names(SL_males_road_regen_final_winter)[1] <- "d_road"

SL_road_males_regen_final<-rbind(SL_males_road_regen_final_spring,SL_males_road_regen_final_earlysum,SL_males_road_regen_final_latesum,SL_males_road_regen_final_autumn,SL_males_road_regen_final_winter)
SL_road_males_regen_final$season <- factor(SL_road_males_regen_final$season, levels = c("spring", "earlysum", "latesum", "autumn", "winter"))
SL_road_males_regen_final$d_road_exp <-exp(SL_road_males_regen_final$d_road)
levels(SL_road_males_regen_final$season)[levels(SL_road_males_regen_final$season)=="spring"] <- "Spring"
levels(SL_road_males_regen_final$season)[levels(SL_road_males_regen_final$season)=="earlysum"] <- "Early summer"
levels(SL_road_males_regen_final$season)[levels(SL_road_males_regen_final$season)=="latesum"] <- "Late summer"
levels(SL_road_males_regen_final$season)[levels(SL_road_males_regen_final$season)=="autumn"] <- "Autumn"
levels(SL_road_males_regen_final$season)[levels(SL_road_males_regen_final$season)=="winter"] <- "Winter"
names(SL_road_males_regen_final)[7] <- "Season"
males_roaddist_regen <-ggplot(SL_road_males_regen_final, aes(x=d_road_exp, y=`50%`,fill=Season,colour=Season)) +
  geom_ribbon(aes(ymin=`5%`, ymax=`95%`), alpha=0.2) +
  geom_line()+
  labs(x= "Distance to road (m)",y="Step length (km/h)")+ylim(0,2.5)+
  theme(axis.title = element_text(size=18),
        axis.text.x = element_text(size=16, colour = "black"),
        axis.text.y = element_text(size=18, colour = "black"))
males_roaddist_regen


###### New #############
#spring
average_new_spring<-data.frame(matrix(NA, nrow = 200, ncol = 100))
b.boot<-1:200
for(i in 1:length(b.boot)){
  calf_bstrap<-as.vector(sample(unique(SL_males_road_new_spring[,1]),7,replace=TRUE))
  bstrap<-data.frame()
  for (j in 1:length(calf_bstrap)){
    x<-SL_males_road_new_spring[SL_males_road_new_spring[,1]==calf_bstrap[j],]
    x2<-x[sample(nrow(x),1),]
    bstrap<-rbind(bstrap,x2)
    mean<-colMeans(bstrap[,2:101])
    average_new_spring[i,]<-mean
  }
}

#earlysum
average_new_earlysum<-data.frame(matrix(NA, nrow = 200, ncol = 100))
b.boot<-1:200
for(i in 1:length(b.boot)){
  calf_bstrap<-as.vector(sample(unique(SL_males_road_new_earlysum[,1]),7,replace=TRUE))
  bstrap<-data.frame()
  for (j in 1:length(calf_bstrap)){
    x<-SL_males_road_new_earlysum[SL_males_road_new_earlysum[,1]==calf_bstrap[j],]
    x2<-x[sample(nrow(x),1),]
    bstrap<-rbind(bstrap,x2)
    mean<-colMeans(bstrap[,2:101])
    average_new_earlysum[i,]<-mean
  }
}

#latesum
average_new_latesum<-data.frame(matrix(NA, nrow = 200, ncol = 100))
b.boot<-1:200
for(i in 1:length(b.boot)){
  calf_bstrap<-as.vector(sample(unique(SL_males_road_new_latesum[,1]),7,replace=TRUE))
  bstrap<-data.frame()
  for (j in 1:length(calf_bstrap)){
    x<-SL_males_road_new_latesum[SL_males_road_new_latesum[,1]==calf_bstrap[j],]
    x2<-x[sample(nrow(x),1),]
    bstrap<-rbind(bstrap,x2)
    mean<-colMeans(bstrap[,2:101])
    average_new_latesum[i,]<-mean
  }
}

#autumn
average_new_autumn<-data.frame(matrix(NA, nrow = 200, ncol = 100))
b.boot<-1:200
for(i in 1:length(b.boot)){
  calf_bstrap<-as.vector(sample(unique(SL_males_road_new_autumn[,1]),7,replace=TRUE))
  bstrap<-data.frame()
  for (j in 1:length(calf_bstrap)){
    x<-SL_males_road_new_autumn[SL_males_road_new_autumn[,1]==calf_bstrap[j],]
    x2<-x[sample(nrow(x),1),]
    bstrap<-rbind(bstrap,x2)
    mean<-colMeans(bstrap[,2:101])
    average_new_autumn[i,]<-mean
  }
}

#winter
average_new_winter<-data.frame(matrix(NA, nrow = 200, ncol = 100))
b.boot<-1:200
for(i in 1:length(b.boot)){
  calf_bstrap<-as.vector(sample(unique(SL_males_road_new_winter[,1]),7,replace=TRUE))
  bstrap<-data.frame()
  for (j in 1:length(calf_bstrap)){
    x<-SL_males_road_new_winter[SL_males_road_new_winter[,1]==calf_bstrap[j],]
    x2<-x[sample(nrow(x),1),]
    bstrap<-rbind(bstrap,x2)
    mean<-colMeans(bstrap[,2:101])
    average_new_winter[i,]<-mean
  }
}


##plot median and percentiles - new

#spring
SL_males_road_new_spring<-melt(average_new_spring[c(1:200),])
d_road_spring2<-rep(d_road_spring,each=200)

SL_males_road_new_spring<-as.data.frame(cbind(SL_males_road_new_spring,d_road_spring2))

SL_males_road_new_final_spring<-SL_males_road_new_spring %>% group_by(d_road_spring2) %>%
  summarise(`5%`=quantile(value, probs=0.025),
            `50%`=quantile(value, probs=0.5),
            `95%`=quantile(value, probs=0.975),
            avg=mean(value),
            n=n())
SL_males_road_new_final_spring$season <- "spring"
names(SL_males_road_new_final_spring)[1] <- "d_road"

#earlysum
SL_males_road_new_earlysum<-melt(average_new_earlysum[c(1:200),])
d_road_earlysum2<-rep(d_road_earlysum,each=200)

SL_males_road_new_earlysum<-as.data.frame(cbind(SL_males_road_new_earlysum,d_road_earlysum2))

SL_males_road_new_final_earlysum<-SL_males_road_new_earlysum %>% group_by(d_road_earlysum2) %>%
  summarise(`5%`=quantile(value, probs=0.025),
            `50%`=quantile(value, probs=0.5),
            `95%`=quantile(value, probs=0.975),
            avg=mean(value),
            n=n())
SL_males_road_new_final_earlysum$season <- "earlysum"
names(SL_males_road_new_final_earlysum)[1] <- "d_road"

#latesum
SL_males_road_new_latesum<-melt(average_new_latesum[c(1:200),])
d_road_latesum2<-rep(d_road_latesum,each=200)

SL_males_road_new_latesum<-as.data.frame(cbind(SL_males_road_new_latesum,d_road_latesum2))

SL_males_road_new_final_latesum<-SL_males_road_new_latesum %>% group_by(d_road_latesum2) %>%
  summarise(`5%`=quantile(value, probs=0.025),
            `50%`=quantile(value, probs=0.5),
            `95%`=quantile(value, probs=0.975),
            avg=mean(value),
            n=n())
SL_males_road_new_final_latesum$season <- "latesum"
names(SL_males_road_new_final_latesum)[1] <- "d_road"

#autumn
SL_males_road_new_autumn<-melt(average_new_autumn[c(1:200),])
d_road_autumn2<-rep(d_road_autumn,each=200)

SL_males_road_new_autumn<-as.data.frame(cbind(SL_males_road_new_autumn,d_road_autumn2))

SL_males_road_new_final_autumn<-SL_males_road_new_autumn %>% group_by(d_road_autumn2) %>%
  summarise(`5%`=quantile(value, probs=0.025),
            `50%`=quantile(value, probs=0.5),
            `95%`=quantile(value, probs=0.975),
            avg=mean(value),
            n=n())
SL_males_road_new_final_autumn$season <- "autumn"
names(SL_males_road_new_final_autumn)[1] <- "d_road"

#winter
SL_males_road_new_winter<-melt(average_new_winter[c(1:200),])
d_road_winter2<-rep(d_road_winter,each=200)

SL_males_road_new_winter<-as.data.frame(cbind(SL_males_road_new_winter,d_road_winter2))

SL_males_road_new_final_winter<-SL_males_road_new_winter %>% group_by(d_road_winter2) %>%
  summarise(`5%`=quantile(value, probs=0.025),
            `50%`=quantile(value, probs=0.5),
            `95%`=quantile(value, probs=0.975),
            avg=mean(value),
            n=n())
SL_males_road_new_final_winter$season <- "winter"
names(SL_males_road_new_final_winter)[1] <- "d_road"

SL_road_males_new_final<-rbind(SL_males_road_new_final_spring,SL_males_road_new_final_earlysum,SL_males_road_new_final_latesum,SL_males_road_new_final_autumn,SL_males_road_new_final_winter)
SL_road_males_new_final$season <- factor(SL_road_males_new_final$season, levels = c("spring", "earlysum", "latesum", "autumn", "winter"))
SL_road_males_new_final$d_road_exp <-exp(SL_road_males_new_final$d_road)
levels(SL_road_males_new_final$season)[levels(SL_road_males_new_final$season)=="spring"] <- "Spring"
levels(SL_road_males_new_final$season)[levels(SL_road_males_new_final$season)=="earlysum"] <- "Early summer"
levels(SL_road_males_new_final$season)[levels(SL_road_males_new_final$season)=="latesum"] <- "Late summer"
levels(SL_road_males_new_final$season)[levels(SL_road_males_new_final$season)=="autumn"] <- "Autumn"
levels(SL_road_males_new_final$season)[levels(SL_road_males_new_final$season)=="winter"] <- "Winter"

males_roaddist_new <-ggplot(SL_road_males_new_final, aes(x=d_road_exp, y=`50%`,fill=season,colour=season)) +
  geom_line()+
  geom_ribbon(aes(ymin=`5%`, ymax=`95%`), alpha=0.2) +
  labs(x= "Distance to road (m)",y="Step length (km/h)")+ylim(0,2.5)+
  theme(axis.title = element_text(size=18),
        axis.text.x = element_text(size=16, colour = "black"),
        axis.text.y = element_text(size=18, colour = "black"))

males_roaddist_new

prow <- plot_grid(
  males_roaddist_new + theme(legend.position="none"),
  males_roaddist_regen + theme(legend.position="none"),
  align = 'vh',
  labels = c("     A) New cut", "B) Regenerating cut"),
  hjust=-0.5,
  vjust=2,
  nrow = 1
)
prow

legend <- get_legend(
  # create some space to the left of the legend
  males_roaddist_regen + theme(legend.box.margin = margin(0, 0, 0, 12),legend.text=element_text(size=16), legend.title=element_text(size=20))
)
distroad <- plot_grid(prow, legend, rel_widths = c(3, .4))
distroad
ggsave("D:\\OneDrive\\Documents\\Academic\\PhD\\Publications\\iSSA\\Figures\\distance to road.tiff", plot=distroad, units="in", width=17, height=8, dpi=600, compression = 'lzw')

#################### Road density #########################

#spring
calf_used_available_final_spring <- calf_used_available_final[calf_used_available_final$season=="spring",]
calf_used_final_spring <- calf_used_available_final_spring[calf_used_available_final_spring$used==1,]
calf_spring_sl <- calf_used_final_spring$sl/1000
calf_spring_gamma<-fitdistr(calf_spring_sl,"gamma", lower=0.001)
d_roaddens_spring<-seq(min(calf_used_available_final$start_roaddens),quantile(calf_used_available_final$start_roaddens,1),length.out = 100)

for(i in 1:length(d_roaddens_spring)){
  y_slength_roaddens_regen_spring<-(1/calf_spring_gamma$estimate[2])*(calf_spring_gamma$estimate[1] + 
                                              slength_spring +
                                              (slength_lnslsinhour_spring*mean(calf_used_available_final$sinhour)) +
                                                (slength_lnslroaddist_spring*mean(calf_used_available_final$ln_start_roaddist)) + (slength_lnslnewcut_spring*0)+(slength_lnslregencut_spring*1)+
                                                (slength_lnslroaddens_spring)*d_roaddens_spring[i])
  y_slength_roaddens_new_spring<-(1/calf_spring_gamma$estimate[2])*(calf_spring_gamma$estimate[1] + 
                                              slength_spring +
                                              (slength_lnslsinhour_spring*mean(calf_used_available_final$sinhour))+
                                                (slength_lnslroaddist_spring*mean(calf_used_available_final$ln_start_roaddist))+(slength_lnslnewcut_spring*1)+(slength_lnslregencut_spring*0) + 
                                                (slength_lnslroaddens_spring)*d_roaddens_spring[i])

  SL_males_roaddens_regen_spring<-as.data.frame(cbind(SL_males_roaddens_regen_spring,y_slength_roaddens_regen_spring))
  SL_males_roaddens_new_spring<-as.data.frame(cbind(SL_males_roaddens_new_spring,y_slength_roaddens_new_spring))
}

SL_males_roaddens_regen_spring[,2]<-as.numeric(as.character(SL_males_roaddens_regen_spring[,2]))
SL_males_roaddens_new_spring[,2]<-as.numeric(as.character(SL_males_roaddens_new_spring[,2]))

#earlysum
calf_used_available_final_earlysum <- calf_used_available_final[calf_used_available_final$season=="earlysum",]
calf_used_final_earlysum <- calf_used_available_final_earlysum[calf_used_available_final_earlysum$used==1,]
calf_earlysum_sl <- calf_used_final_earlysum$sl/1000
calf_earlysum_gamma<-fitdistr(calf_earlysum_sl,"gamma", lower=0.001)
d_roaddens_earlysum<-seq(min(calf_used_available_final$start_roaddens),quantile(calf_used_available_final$start_roaddens,1),length.out = 100)

for(i in 1:length(d_roaddens_earlysum)){
  y_slength_roaddens_regen_earlysum<-(1/calf_earlysum_gamma$estimate[2])*(calf_earlysum_gamma$estimate[1] + 
                                              slength_earlysum +
                                              (slength_lnslsinhour_earlysum*mean(calf_used_available_final$sinhour)) +
                                                (slength_lnslroaddist_earlysum*mean(calf_used_available_final$ln_start_roaddist)) + (slength_lnslnewcut_earlysum*0)+(slength_lnslregencut_earlysum*1)+
                                                (slength_lnslroaddens_earlysum)*d_roaddens_earlysum[i])
  y_slength_roaddens_new_earlysum<-(1/calf_earlysum_gamma$estimate[2])*(calf_earlysum_gamma$estimate[1] + 
                                              slength_earlysum +
                                              (slength_lnslsinhour_earlysum*mean(calf_used_available_final$sinhour))+
                                                (slength_lnslroaddist_earlysum*mean(calf_used_available_final$ln_start_roaddist))+(slength_lnslnewcut_earlysum*1)+(slength_lnslregencut_earlysum*0) + 
                                                (slength_lnslroaddens_earlysum)*d_roaddens_earlysum[i])

  SL_males_roaddens_regen_earlysum<-as.data.frame(cbind(SL_males_roaddens_regen_earlysum,y_slength_roaddens_regen_earlysum))
  SL_males_roaddens_new_earlysum<-as.data.frame(cbind(SL_males_roaddens_new_earlysum,y_slength_roaddens_new_earlysum))
}

SL_males_roaddens_regen_earlysum[,2]<-as.numeric(as.character(SL_males_roaddens_regen_earlysum[,2]))
SL_males_roaddens_new_earlysum[,2]<-as.numeric(as.character(SL_males_roaddens_new_earlysum[,2]))

#latesum
calf_used_available_final_latesum <- calf_used_available_final[calf_used_available_final$season=="latesum",]
calf_used_final_latesum <- calf_used_available_final_latesum[calf_used_available_final_latesum$used==1,]
calf_latesum_sl <- calf_used_final_latesum$sl/1000
calf_latesum_gamma<-fitdistr(calf_latesum_sl,"gamma", lower=0.001)
d_roaddens_latesum<-seq(min(calf_used_available_final$start_roaddens),quantile(calf_used_available_final$start_roaddens,1),length.out = 100)

for(i in 1:length(d_roaddens_latesum)){
  y_slength_roaddens_regen_latesum<-(1/calf_latesum_gamma$estimate[2])*(calf_latesum_gamma$estimate[1] + 
                                              slength_latesum +
                                              (slength_lnslsinhour_latesum*mean(calf_used_available_final$sinhour)) +
                                                (slength_lnslroaddist_latesum*mean(calf_used_available_final$ln_start_roaddist)) + (slength_lnslnewcut_latesum*0)+(slength_lnslregencut_latesum*1)+
                                                (slength_lnslroaddens_latesum)*d_roaddens_latesum[i])
  y_slength_roaddens_new_latesum<-(1/calf_latesum_gamma$estimate[2])*(calf_latesum_gamma$estimate[1] + 
                                              slength_latesum +
                                              (slength_lnslsinhour_latesum*mean(calf_used_available_final$sinhour))+
                                                (slength_lnslroaddist_latesum*mean(calf_used_available_final$ln_start_roaddist))+(slength_lnslnewcut_latesum*1)+(slength_lnslregencut_latesum*0) + 
                                                (slength_lnslroaddens_latesum)*d_roaddens_latesum[i])

  SL_males_roaddens_regen_latesum<-as.data.frame(cbind(SL_males_roaddens_regen_latesum,y_slength_roaddens_regen_latesum))
  SL_males_roaddens_new_latesum<-as.data.frame(cbind(SL_males_roaddens_new_latesum,y_slength_roaddens_new_latesum))
}

SL_males_roaddens_regen_latesum[,2]<-as.numeric(as.character(SL_males_roaddens_regen_latesum[,2]))
SL_males_roaddens_new_latesum[,2]<-as.numeric(as.character(SL_males_roaddens_new_latesum[,2]))

#autumn
calf_used_available_final_autumn <- calf_used_available_final[calf_used_available_final$season=="autumn",]
calf_used_final_autumn <- calf_used_available_final_autumn[calf_used_available_final_autumn$used==1,]
calf_autumn_sl <- calf_used_final_autumn$sl/1000
calf_autumn_gamma<-fitdistr(calf_autumn_sl,"gamma", lower=0.001)
d_roaddens_autumn<-seq(min(calf_used_available_final$start_roaddens),quantile(calf_used_available_final$start_roaddens,1),length.out = 100)

for(i in 1:length(d_roaddens_autumn)){
  y_slength_roaddens_regen_autumn<-(1/calf_autumn_gamma$estimate[2])*(calf_autumn_gamma$estimate[1] + 
                                              slength_autumn +
                                              (slength_lnslsinhour_autumn*mean(calf_used_available_final$sinhour)) +
                                                (slength_lnslroaddist_autumn*mean(calf_used_available_final$ln_start_roaddist)) + (slength_lnslnewcut_autumn*0)+(slength_lnslregencut_autumn*1)+
                                                (slength_lnslroaddens_autumn)*d_roaddens_autumn[i])
  y_slength_roaddens_new_autumn<-(1/calf_autumn_gamma$estimate[2])*(calf_autumn_gamma$estimate[1] + 
                                              slength_autumn +
                                              (slength_lnslsinhour_autumn*mean(calf_used_available_final$sinhour)) +
                                                (slength_lnslroaddist_autumn*mean(calf_used_available_final$ln_start_roaddist))+ (slength_lnslnewcut_autumn*1)+ (slength_lnslregencut_autumn*0) + 
                                                (slength_lnslroaddens_autumn)*d_roaddens_autumn[i])

  SL_males_roaddens_regen_autumn<-as.data.frame(cbind(SL_males_roaddens_regen_autumn,y_slength_roaddens_regen_autumn))
  SL_males_roaddens_new_autumn<-as.data.frame(cbind(SL_males_roaddens_new_autumn,y_slength_roaddens_new_autumn))
}

SL_males_roaddens_regen_autumn[,2]<-as.numeric(as.character(SL_males_roaddens_regen_autumn[,2]))
SL_males_roaddens_new_autumn[,2]<-as.numeric(as.character(SL_males_roaddens_new_autumn[,2]))

#winter
calf_used_available_final_winter <- calf_used_available_final[calf_used_available_final$season=="winter",]
calf_used_final_winter <- calf_used_available_final_winter[calf_used_available_final_winter$used==1,]
calf_winter_sl <- calf_used_final_winter$sl/1000
calf_winter_gamma<-fitdistr(calf_winter_sl,"gamma", lower=0.001)
d_roaddens_winter<-seq(min(calf_used_available_final$start_roaddens),quantile(calf_used_available_final$start_roaddens,1),length.out = 100)

for(i in 1:length(d_roaddens_winter)){
  y_slength_roaddens_regen_winter<-(1/calf_winter_gamma$estimate[2])*(calf_winter_gamma$estimate[1] + 
                                              slength_winter +
                                              (slength_lnslsinhour_winter*mean(calf_used_available_final$sinhour)) +
                                                (slength_lnslroaddist_winter*mean(calf_used_available_final$ln_start_roaddist)) + (slength_lnslnewcut_winter*0)+(slength_lnslregencut_winter*1)+
                                                (slength_lnslroaddens_winter)*d_roaddens_winter[i])
  y_slength_roaddens_new_winter<-(1/calf_winter_gamma$estimate[2])*(calf_winter_gamma$estimate[1] + 
                                              slength_winter +
                                              (slength_lnslsinhour_winter*mean(calf_used_available_final$sinhour)) +
                                                (slength_lnslroaddens_winter*mean(calf_used_available_final$start_roaddens))+ (slength_lnslnewcut_winter*1)+ (slength_lnslregencut_winter*0) + 
                                                (slength_lnslroaddens_winter)*d_roaddens_winter[i])

  SL_males_roaddens_regen_winter<-as.data.frame(cbind(SL_males_roaddens_regen_winter,y_slength_roaddens_regen_winter))
  SL_males_roaddens_new_winter<-as.data.frame(cbind(SL_males_roaddens_new_winter,y_slength_roaddens_new_winter))
}

SL_males_roaddens_regen_winter[,2]<-as.numeric(as.character(SL_males_roaddens_regen_winter[,2]))
SL_males_roaddens_new_winter[,2]<-as.numeric(as.character(SL_males_roaddens_new_winter[,2]))


############## BOOTSTRAPPED VALUES FOR ERROR RIBBONS - ROADDENS #################

########### bootstrap for calfs at each d_trail value - regen #################

#spring
average_regen_roaddens_spring<-data.frame(matrix(NA, nrow = 200, ncol = 100))
b.boot<-1:200
for(i in 1:length(b.boot)){
  calf_bstrap<-as.vector(sample(unique(SL_males_roaddens_regen_spring[,1]),7,replace=TRUE))
  bstrap<-data.frame()
  for (j in 1:length(calf_bstrap)){
    x<-SL_males_roaddens_regen_spring[SL_males_roaddens_regen_spring[,1]==calf_bstrap[j],]
    x2<-x[sample(nrow(x),1),]
    bstrap<-rbind(bstrap,x2)
    mean<-colMeans(bstrap[,2:101])
    average_regen_roaddens_spring[i,]<-mean
  }
}

#earlysum
average_regen_roaddens_earlysum<-data.frame(matrix(NA, nrow = 200, ncol = 100))
b.boot<-1:200
for(i in 1:length(b.boot)){
  calf_bstrap<-as.vector(sample(unique(SL_males_roaddens_regen_earlysum[,1]),7,replace=TRUE))
  bstrap<-data.frame()
  for (j in 1:length(calf_bstrap)){
    x<-SL_males_roaddens_regen_earlysum[SL_males_roaddens_regen_earlysum[,1]==calf_bstrap[j],]
    x2<-x[sample(nrow(x),1),]
    bstrap<-rbind(bstrap,x2)
    mean<-colMeans(bstrap[,2:101])
    average_regen_roaddens_earlysum[i,]<-mean
  }
}

#latesum
average_regen_roaddens_latesum<-data.frame(matrix(NA, nrow = 200, ncol = 100))
b.boot<-1:200
for(i in 1:length(b.boot)){
  calf_bstrap<-as.vector(sample(unique(SL_males_roaddens_regen_latesum[,1]),7,replace=TRUE))
  bstrap<-data.frame()
  for (j in 1:length(calf_bstrap)){
    x<-SL_males_roaddens_regen_latesum[SL_males_roaddens_regen_latesum[,1]==calf_bstrap[j],]
    x2<-x[sample(nrow(x),1),]
    bstrap<-rbind(bstrap,x2)
    mean<-colMeans(bstrap[,2:101])
    average_regen_roaddens_latesum[i,]<-mean
  }
}

#autumn
average_regen_roaddens_autumn<-data.frame(matrix(NA, nrow = 200, ncol = 100))
b.boot<-1:200
for(i in 1:length(b.boot)){
  calf_bstrap<-as.vector(sample(unique(SL_males_roaddens_regen_autumn[,1]),7,replace=TRUE))
  bstrap<-data.frame()
  for (j in 1:length(calf_bstrap)){
    x<-SL_males_roaddens_regen_autumn[SL_males_roaddens_regen_autumn[,1]==calf_bstrap[j],]
    x2<-x[sample(nrow(x),1),]
    bstrap<-rbind(bstrap,x2)
    mean<-colMeans(bstrap[,2:101])
    average_regen_roaddens_autumn[i,]<-mean
  }
}

#winter
average_regen_roaddens_winter<-data.frame(matrix(NA, nrow = 200, ncol = 100))
b.boot<-1:200
for(i in 1:length(b.boot)){
  calf_bstrap<-as.vector(sample(unique(SL_males_roaddens_regen_winter[,1]),7,replace=TRUE))
  bstrap<-data.frame()
  for (j in 1:length(calf_bstrap)){
    x<-SL_males_roaddens_regen_winter[SL_males_roaddens_regen_winter[,1]==calf_bstrap[j],]
    x2<-x[sample(nrow(x),1),]
    bstrap<-rbind(bstrap,x2)
    mean<-colMeans(bstrap[,2:101])
    average_regen_roaddens_winter[i,]<-mean
  }
}


########### plot median and percentiles - regen #####################

#spring
SL_males_roaddens_regen_spring<-melt(average_regen_roaddens_spring[c(1:200),])
d_roaddens_spring1<-rep(d_roaddens_spring,each=200)

SL_males_roaddens_regen_spring<-as.data.frame(cbind(SL_males_roaddens_regen_spring,d_roaddens_spring1))

SL_males_roaddens_regen_final_spring<-SL_males_roaddens_regen_spring %>% group_by(d_roaddens_spring1) %>%
  summarise(`5%`=quantile(value, probs=0.025),
            `50%`=quantile(value, probs=0.5),
            `95%`=quantile(value, probs=0.975),
            avg=mean(value),
            n=n())
SL_males_roaddens_regen_final_spring$season <- "spring"
names(SL_males_roaddens_regen_final_spring)[1] <- "d_roaddens"

#earlysum
SL_males_roaddens_regen_earlysum<-melt(average_regen_roaddens_earlysum[c(1:200),])
d_roaddens_earlysum1<-rep(d_roaddens_earlysum,each=200)

SL_males_roaddens_regen_earlysum<-as.data.frame(cbind(SL_males_roaddens_regen_earlysum,d_roaddens_earlysum1))

SL_males_roaddens_regen_final_earlysum<-SL_males_roaddens_regen_earlysum %>% group_by(d_roaddens_earlysum1) %>%
  summarise(`5%`=quantile(value, probs=0.025),
            `50%`=quantile(value, probs=0.5),
            `95%`=quantile(value, probs=0.975),
            avg=mean(value),
            n=n())
SL_males_roaddens_regen_final_earlysum$season <- "earlysum"
names(SL_males_roaddens_regen_final_earlysum)[1] <- "d_roaddens"

#latesum
SL_males_roaddens_regen_latesum<-melt(average_regen_roaddens_latesum[c(1:200),])
d_roaddens_latesum1<-rep(d_roaddens_latesum,each=200)

SL_males_roaddens_regen_latesum<-as.data.frame(cbind(SL_males_roaddens_regen_latesum,d_roaddens_latesum1))

SL_males_roaddens_regen_final_latesum<-SL_males_roaddens_regen_latesum %>% group_by(d_roaddens_latesum1) %>%
  summarise(`5%`=quantile(value, probs=0.025),
            `50%`=quantile(value, probs=0.5),
            `95%`=quantile(value, probs=0.975),
            avg=mean(value),
            n=n())
SL_males_roaddens_regen_final_latesum$season <- "latesum"
names(SL_males_roaddens_regen_final_latesum)[1] <- "d_roaddens"

#autumn
SL_males_roaddens_regen_autumn<-melt(average_regen_roaddens_autumn[c(1:200),])
d_roaddens_autumn1<-rep(d_roaddens_autumn,each=200)

SL_males_roaddens_regen_autumn<-as.data.frame(cbind(SL_males_roaddens_regen_autumn,d_roaddens_autumn1))

SL_males_roaddens_regen_final_autumn<-SL_males_roaddens_regen_autumn %>% group_by(d_roaddens_autumn1) %>%
  summarise(`5%`=quantile(value, probs=0.025),
            `50%`=quantile(value, probs=0.5),
            `95%`=quantile(value, probs=0.975),
            avg=mean(value),
            n=n())
SL_males_roaddens_regen_final_autumn$season <- "autumn"
names(SL_males_roaddens_regen_final_autumn)[1] <- "d_roaddens"

#winter
SL_males_roaddens_regen_winter<-melt(average_regen_roaddens_winter[c(1:200),])
d_roaddens_winter1<-rep(d_roaddens_winter,each=200)

SL_males_roaddens_regen_winter<-as.data.frame(cbind(SL_males_roaddens_regen_winter,d_roaddens_winter1))

SL_males_roaddens_regen_final_winter<-SL_males_roaddens_regen_winter %>% group_by(d_roaddens_winter1) %>%
  summarise(`5%`=quantile(value, probs=0.025),
            `50%`=quantile(value, probs=0.5),
            `95%`=quantile(value, probs=0.975),
            avg=mean(value),
            n=n())
SL_males_roaddens_regen_final_winter$season <- "winter"
names(SL_males_roaddens_regen_final_winter)[1] <- "d_roaddens"

SL_roaddens_males_regen_final<-rbind(SL_males_roaddens_regen_final_spring,SL_males_roaddens_regen_final_earlysum,SL_males_roaddens_regen_final_latesum,SL_males_roaddens_regen_final_autumn,SL_males_roaddens_regen_final_winter)
SL_roaddens_males_regen_final$season <- factor(SL_roaddens_males_regen_final$season, levels = c("spring", "earlysum", "latesum", "autumn", "winter"))
levels(SL_roaddens_males_regen_final$season)[levels(SL_roaddens_males_regen_final$season)=="spring"] <- "Spring"
levels(SL_roaddens_males_regen_final$season)[levels(SL_roaddens_males_regen_final$season)=="earlysum"] <- "Early summer"
levels(SL_roaddens_males_regen_final$season)[levels(SL_roaddens_males_regen_final$season)=="latesum"] <- "Late summer"
levels(SL_roaddens_males_regen_final$season)[levels(SL_roaddens_males_regen_final$season)=="autumn"] <- "Autumn"
levels(SL_roaddens_males_regen_final$season)[levels(SL_roaddens_males_regen_final$season)=="winter"] <- "Winter"
names(SL_roaddens_males_regen_final)[7] <- "Season"
males_roaddens_regen <-ggplot(SL_roaddens_males_regen_final, aes(x=d_roaddens, y=`50%`,fill=Season,colour=Season)) +
  geom_ribbon(aes(ymin=`5%`, ymax=`95%`), alpha=0.2) +
  geom_line()+
  labs(x= expression("Road density"~(km/km^2)),y="Step length (km/h)")+ylim(0,2)+
  theme(axis.title = element_text(size=18),
        axis.text.x = element_text(size=16, colour = "black"),
        axis.text.y = element_text(size=18, colour = "black"))
males_roaddens_regen

###### New #############
#spring
average_new_roaddens_spring<-data.frame(matrix(NA, nrow = 200, ncol = 100))
b.boot<-1:200
for(i in 1:length(b.boot)){
  calf_bstrap<-as.vector(sample(unique(SL_males_roaddens_new_spring[,1]),7,replace=TRUE))
  bstrap<-data.frame()
  for (j in 1:length(calf_bstrap)){
    x<-SL_males_roaddens_new_spring[SL_males_roaddens_new_spring[,1]==calf_bstrap[j],]
    x2<-x[sample(nrow(x),1),]
    bstrap<-rbind(bstrap,x2)
    mean<-colMeans(bstrap[,2:101])
    average_new_roaddens_spring[i,]<-mean
  }
}

#earlysum
average_new_roaddens_earlysum<-data.frame(matrix(NA, nrow = 200, ncol = 100))
b.boot<-1:200
for(i in 1:length(b.boot)){
  calf_bstrap<-as.vector(sample(unique(SL_males_roaddens_new_earlysum[,1]),7,replace=TRUE))
  bstrap<-data.frame()
  for (j in 1:length(calf_bstrap)){
    x<-SL_males_roaddens_new_earlysum[SL_males_roaddens_new_earlysum[,1]==calf_bstrap[j],]
    x2<-x[sample(nrow(x),1),]
    bstrap<-rbind(bstrap,x2)
    mean<-colMeans(bstrap[,2:101])
    average_new_roaddens_earlysum[i,]<-mean
  }
}

#latesum
average_new_roaddens_latesum<-data.frame(matrix(NA, nrow = 200, ncol = 100))
b.boot<-1:200
for(i in 1:length(b.boot)){
  calf_bstrap<-as.vector(sample(unique(SL_males_roaddens_new_latesum[,1]),7,replace=TRUE))
  bstrap<-data.frame()
  for (j in 1:length(calf_bstrap)){
    x<-SL_males_roaddens_new_latesum[SL_males_roaddens_new_latesum[,1]==calf_bstrap[j],]
    x2<-x[sample(nrow(x),1),]
    bstrap<-rbind(bstrap,x2)
    mean<-colMeans(bstrap[,2:101])
    average_new_roaddens_latesum[i,]<-mean
  }
}

#autumn
average_new_roaddens_autumn<-data.frame(matrix(NA, nrow = 200, ncol = 100))
b.boot<-1:200
for(i in 1:length(b.boot)){
  calf_bstrap<-as.vector(sample(unique(SL_males_roaddens_new_autumn[,1]),7,replace=TRUE))
  bstrap<-data.frame()
  for (j in 1:length(calf_bstrap)){
    x<-SL_males_roaddens_new_autumn[SL_males_roaddens_new_autumn[,1]==calf_bstrap[j],]
    x2<-x[sample(nrow(x),1),]
    bstrap<-rbind(bstrap,x2)
    mean<-colMeans(bstrap[,2:101])
    average_new_roaddens_autumn[i,]<-mean
  }
}

#winter
average_new_roaddens_winter<-data.frame(matrix(NA, nrow = 200, ncol = 100))
b.boot<-1:200
for(i in 1:length(b.boot)){
  calf_bstrap<-as.vector(sample(unique(SL_males_roaddens_new_winter[,1]),7,replace=TRUE))
  bstrap<-data.frame()
  for (j in 1:length(calf_bstrap)){
    x<-SL_males_roaddens_new_winter[SL_males_roaddens_new_winter[,1]==calf_bstrap[j],]
    x2<-x[sample(nrow(x),1),]
    bstrap<-rbind(bstrap,x2)
    mean<-colMeans(bstrap[,2:101])
    average_new_roaddens_winter[i,]<-mean
  }
}


##plot median and percentiles - new

#spring
SL_males_roaddens_new_spring<-melt(average_new_roaddens_spring[c(1:200),])
d_roaddens_spring2<-rep(d_roaddens_spring,each=200)

SL_males_roaddens_new_spring<-as.data.frame(cbind(SL_males_roaddens_new_spring,d_roaddens_spring2))

SL_males_roaddens_new_final_spring<-SL_males_roaddens_new_spring %>% group_by(d_roaddens_spring2) %>%
  summarise(`5%`=quantile(value, probs=0.025),
            `50%`=quantile(value, probs=0.5),
            `95%`=quantile(value, probs=0.975),
            avg=mean(value),
            n=n())
SL_males_roaddens_new_final_spring$season <- "spring"
names(SL_males_roaddens_new_final_spring)[1] <- "d_roaddens"

#earlysum
SL_males_roaddens_new_earlysum<-melt(average_new_roaddens_earlysum[c(1:200),])
d_roaddens_earlysum2<-rep(d_roaddens_earlysum,each=200)

SL_males_roaddens_new_earlysum<-as.data.frame(cbind(SL_males_roaddens_new_earlysum,d_roaddens_earlysum2))

SL_males_roaddens_new_final_earlysum<-SL_males_roaddens_new_earlysum %>% group_by(d_roaddens_earlysum2) %>%
  summarise(`5%`=quantile(value, probs=0.025),
            `50%`=quantile(value, probs=0.5),
            `95%`=quantile(value, probs=0.975),
            avg=mean(value),
            n=n())
SL_males_roaddens_new_final_earlysum$season <- "earlysum"
names(SL_males_roaddens_new_final_earlysum)[1] <- "d_roaddens"

#latesum
SL_males_roaddens_new_latesum<-melt(average_new_roaddens_latesum[c(1:200),])
d_roaddens_latesum2<-rep(d_roaddens_latesum,each=200)

SL_males_roaddens_new_latesum<-as.data.frame(cbind(SL_males_roaddens_new_latesum,d_roaddens_latesum2))

SL_males_roaddens_new_final_latesum<-SL_males_roaddens_new_latesum %>% group_by(d_roaddens_latesum2) %>%
  summarise(`5%`=quantile(value, probs=0.025),
            `50%`=quantile(value, probs=0.5),
            `95%`=quantile(value, probs=0.975),
            avg=mean(value),
            n=n())
SL_males_roaddens_new_final_latesum$season <- "latesum"
names(SL_males_roaddens_new_final_latesum)[1] <- "d_roaddens"

#autumn
SL_males_roaddens_new_autumn<-melt(average_new_roaddens_autumn[c(1:200),])
d_roaddens_autumn2<-rep(d_roaddens_autumn,each=200)

SL_males_roaddens_new_autumn<-as.data.frame(cbind(SL_males_roaddens_new_autumn,d_roaddens_autumn2))

SL_males_roaddens_new_final_autumn<-SL_males_roaddens_new_autumn %>% group_by(d_roaddens_autumn2) %>%
  summarise(`5%`=quantile(value, probs=0.025),
            `50%`=quantile(value, probs=0.5),
            `95%`=quantile(value, probs=0.975),
            avg=mean(value),
            n=n())
SL_males_roaddens_new_final_autumn$season <- "autumn"
names(SL_males_roaddens_new_final_autumn)[1] <- "d_roaddens"

#winter
SL_males_roaddens_new_winter<-melt(average_new_roaddens_winter[c(1:200),])
d_roaddens_winter2<-rep(d_roaddens_winter,each=200)

SL_males_roaddens_new_winter<-as.data.frame(cbind(SL_males_roaddens_new_winter,d_roaddens_winter2))

SL_males_roaddens_new_final_winter<-SL_males_roaddens_new_winter %>% group_by(d_roaddens_winter2) %>%
  summarise(`5%`=quantile(value, probs=0.025),
            `50%`=quantile(value, probs=0.5),
            `95%`=quantile(value, probs=0.975),
            avg=mean(value),
            n=n())
SL_males_roaddens_new_final_winter$season <- "winter"
names(SL_males_roaddens_new_final_winter)[1] <- "d_roaddens"

SL_roaddens_males_new_final<-rbind(SL_males_roaddens_new_final_spring,SL_males_roaddens_new_final_earlysum,SL_males_roaddens_new_final_latesum,SL_males_roaddens_new_final_autumn,SL_males_roaddens_new_final_winter)
SL_roaddens_males_new_final$season <- factor(SL_roaddens_males_new_final$season, levels = c("spring", "earlysum", "latesum", "autumn", "winter"))
levels(SL_roaddens_males_new_final$season)[levels(SL_roaddens_males_new_final$season)=="spring"] <- "Spring"
levels(SL_roaddens_males_new_final$season)[levels(SL_roaddens_males_new_final$season)=="earlysum"] <- "Early summer"
levels(SL_roaddens_males_new_final$season)[levels(SL_roaddens_males_new_final$season)=="latesum"] <- "Late summer"
levels(SL_roaddens_males_new_final$season)[levels(SL_roaddens_males_new_final$season)=="autumn"] <- "Autumn"
levels(SL_roaddens_males_new_final$season)[levels(SL_roaddens_males_new_final$season)=="winter"] <- "Winter"

males_roaddens_new <-ggplot(SL_roaddens_males_new_final, aes(x=d_roaddens, y=`50%`,fill=season,colour=season)) +
  geom_line()+
  geom_ribbon(aes(ymin=`5%`, ymax=`95%`), alpha=0.2) +
  labs(x= expression("Road density"~(km/km^2)),y="Step length (km/h)")+ylim(0,2)+
  theme(axis.title = element_text(size=18),
        axis.text.x = element_text(size=16, colour = "black"),
        axis.text.y = element_text(size=18, colour = "black"))

males_roaddens_new

prow2 <- plot_grid(
  males_roaddens_new + theme(legend.position="none"),
  males_roaddens_regen + theme(legend.position="none"),
  align = 'vh',
  labels = c("     C) New cut", "D) Regenerating cut"),
  hjust=-0.5,
  vjust=2,
  nrow = 1
)
prow2

legend2 <- get_legend(
  # create some space to the left of the legend
  males_roaddens_regen + theme(legend.box.margin = margin(0, 0, 0, 12),legend.text=element_text(size=16), legend.title=element_text(size=18))
)
steplengthplot <- plot_grid(prow,legend2,prow2,nrow=2,ncol=2, rel_widths = c(3, .4,3))
steplengthplot
ggsave("D:\\OneDrive\\Documents\\Academic\\PhD\\Publications\\iSSA\\Figures\\Step length.tiff", plot=steplengthplot, units="in", width=16, height=8, dpi=600, compression = 'lzw')

-----------------------------------
########### RSS CALCULATIONS ##############
-----------------------------------

  
## RSS - MALES
road_beta_spring<-as.numeric(as.character(results_males_spring[results_males_spring$Covariates=="ln_end_roaddist",7]))
mean_SL_spring<-mean(calf_used_available_final_spring[calf_used_available_final_spring$used==1,11])
d_road<-seq(min(calf_used_available_final_spring$ln_end_roaddist), max(calf_used_available_final_spring$ln_end_roaddist),length.out = 1000)
RSS_males_road_spring<-unique(paste(results_males_spring$calf,results_males_spring$Year))

##create responses for each bear
for(i in 1:length(d_road)){
  RSS_road_spring<-(d_road[i]*road_beta_spring)
  RSS_males_road_spring<-as.data.frame(cbind(RSS_males_road_spring,RSS_road_spring))
}

RSS_males_road_spring[,2]<-as.numeric(as.character(RSS_males_road_spring[,2]))

average_new<-data.frame(matrix(NA, nrow = 200, ncol = 1000))
b.boot<-1:200
for(i in 1:length(b.boot)){
  calf_bstrap<-as.vector(sample(unique(RSS_males_road_spring$RSS_males_road_spring),8,replace=TRUE))
  bstrap<-data.frame()
  for (j in 1:length(calf_bstrap)){
    x<-RSS_males_road_spring[RSS_males_road_spring$RSS_males_road_spring==calf_bstrap[j],]
    x2<-x[sample(nrow(x),1),]
    bstrap<-rbind(bstrap,x2)
    mean<-colMeans(bstrap[,2:1001])
    average_new[i,]<-mean
  }
}

RSS_males_cut_new_spring2<-melt(average_new[c(1:200),])

d_road<-rep(d_road,each=200)
RSS_males_cut_new_spring<-cbind(RSS_males_cut_new_spring2,d_road)

RSS_males_cut_new_spring_final<-RSS_males_cut_new_spring %>% group_by(d_road) %>%
  summarise(`5%`=quantile(value, probs=0.025),
            `50%`=quantile(value, probs=0.5),
            `95%`=quantile(value, probs=0.975),
            avg=mean(value),
            n=n())

RSS_males_cut_new_spring_final$lnRSS <- log(RSS_males_cut_new_spring_final$`50%`)
RSS_males_cut_new_spring_final$lnRSS5 <- log(RSS_males_cut_new_spring_final$`5%`)
RSS_males_cut_new_spring_final$lnRSS95 <- log(RSS_males_cut_new_spring_final$`95%`)
RSS_males_cut_new_spring_final$d_road_exp <- exp(RSS_males_cut_new_spring_final$d_road)

ggplot(RSS_males_cut_new_spring_final, aes(x=d_road_exp, y=`50%`)) +
  geom_ribbon(aes(ymin=`5%`, ymax=`95%`), alpha=0.2) +
  geom_line()


  
  
  
  













## RSS - Spring
roaddist_beta_spring<-as.numeric(as.character(results_males_spring[results_males_spring$Covariates=="ln_end_roaddist",7]))
newcut_beta_spring<-as.numeric(as.character(results_males_spring[results_males_spring$Covariates=="ln_end_roaddist:end_cutageclass_new1",7]))
regencut_beta_spring<-as.numeric(as.character(results_males_spring[results_males_spring$Covariates=="ln_end_roaddist:end_cutageclass_regen1",7]))
mean_SL_spring<-mean(calf_used_available_final_spring[calf_used_available_final_spring$used==1,67])
d_road_spring<-seq(min(calf_used_available_final_spring$ln_end_roaddist), max(calf_used_available_final_spring$ln_end_roaddist),length.out = 1000)
RSS_males_cut_new_spring<-unique(paste(results_males_spring$calf,results_males_spring$Year))
RSS_males_cut_regen_spring<-unique(paste(results_males_spring$calf,results_males_spring$Year))

##create responses for each bear
for(i in 1:length(d_road_spring)){
  RSS_new_spring<-(d_road_spring[i]/(d_road_spring[i]-(2*mean_SL_spring)))^(roaddist_beta_spring+(newcut_beta_spring*1))
  RSS_regen_spring<-(d_road_spring[i]/(d_road_spring[i]-(2*mean_SL_spring)))^(roaddist_beta_spring+(regencut_beta_spring*1))

  RSS_males_cut_new_spring<-as.data.frame(cbind(RSS_males_cut_new_spring,RSS_new_spring))
  RSS_males_cut_regen_spring<-as.data.frame(cbind(RSS_males_cut_regen_spring,RSS_regen_spring))
}

RSS_males_cut_new_spring[,2]<-as.numeric(as.character(RSS_males_cut_new_spring[,2]))
RSS_males_cut_regen_spring[,2]<-as.numeric(as.character(RSS_males_cut_regen_spring[,2]))

average_new<-data.frame(matrix(NA, nrow = 200, ncol = 1000))
b.boot<-1:200
for(i in 1:length(b.boot)){
  calf_bstrap<-as.vector(sample(unique(RSS_males_cut_new_spring$RSS_males_cut_new_spring),8,replace=TRUE))
  bstrap<-data.frame()
  for (j in 1:length(calf_bstrap)){
    x<-RSS_males_cut_new_spring[RSS_males_cut_new_spring$RSS_males_cut_new_spring==calf_bstrap[j],]
    x2<-x[sample(nrow(x),1),]
    bstrap<-rbind(bstrap,x2)
    mean<-colMeans(bstrap[,2:1001])
    average_new[i,]<-mean
  }
}

RSS_males_cut_new_spring2<-melt(average_new[c(1:200),])
d_road_spring<-rep(d_road_spring,each=200)

RSS_males_cut_new_spring<-cbind(RSS_males_cut_new_spring2,d_road_spring)

RSS_males_cut_new_spring_final<-RSS_males_cut_new_spring %>% group_by(d_road_spring) %>%
  summarise(`5%`=quantile(value, probs=0.025, na.rm=TRUE),
            `50%`=quantile(value, probs=0.5, na.rm=TRUE),
            `95%`=quantile(value, probs=0.975, na.rm=TRUE),
            avg=median(value),
            n=n())

##low motorised

average_regen<-data.frame(matrix(NA, nrow = 200, ncol = 1000))
b.boot<-1:200
for(i in 1:length(b.boot)){
  calf_bstrap<-as.vector(sample(unique(RSS_males_cut_regen_spring$RSS_males_cut_regen_spring),8,replace=TRUE))
  bstrap<-data.frame()
  for (j in 1:length(calf_bstrap)){
    x<-RSS_males_cut_regen_spring[RSS_males_cut_regen_spring$RSS_males_cut_regen_spring==calf_bstrap[j],]
    x2<-x[sample(nrow(x),1),]
    bstrap<-rbind(bstrap,x2)
    mean<-colMeans(bstrap[,2:1001])
    average_regen[i,]<-mean
  }
}

RSS_males_cut_regen_spring2<-melt(average_regen[c(1:200),])

RSS_males_cut_regen_spring<-cbind(RSS_males_cut_regen_spring2,d_road_spring)

RSS_males_cut_regen_spring_final<-RSS_males_cut_regen_spring %>% group_by(d_road_spring) %>%
  summarise(`5%`=quantile(value, probs=0.025, na.rm=TRUE),
            `50%`=quantile(value, probs=0.5, na.rm=TRUE),
            `95%`=quantile(value, probs=0.975, na.rm=TRUE),
            avg=median(value),
            n=n())

cutage<-c(rep("new",1000),rep("regen",1000))

RSS_males_cutagesize_spring_final<-rbind(RSS_males_cut_new_spring_final,RSS_males_cut_regen_spring_final)
RSS_males_cutagesize_spring_final<-cbind(RSS_males_cutagesize_spring_final,cutage)
RSS_males_cutagesize_spring_final$lnRSS <- log(RSS_males_cutagesize_spring_final$`50%`)
RSS_males_cutagesize_spring_final$lnRSS5 <- log(RSS_males_cutagesize_spring_final$`5%`)
RSS_males_cutagesize_spring_final$lnRSS95 <- log(RSS_males_cutagesize_spring_final$`95%`)
RSS_males_cutagesize_spring_final$lnavg <- log(RSS_males_cutagesize_spring_final$avg)
RSS_males_cutagesize_spring_final$d_road_exp <- exp(RSS_males_cutagesize_spring_final$d_road_spring)
RSS_males_cutagesize_spring_final$d_road_spring <- NULL
RSS_males_cutagesize_spring_final$Season <- "Spring"

ggplot(RSS_males_cutagesize_spring_final, aes(x=d_road_exp, y=lnRSS,fill=cutage,colour=cutage)) +
  geom_line() +
  geom_ribbon(aes(ymin=lnRSS5, ymax=lnRSS95), alpha=0.2)+xlim(0,1000)+ylim(0,0.5)


## RSS - Early sum
roaddist_beta_earlysum<-as.numeric(as.character(results_males_earlysum[results_males_earlysum$Covariates=="ln_end_roaddist",7]))
newcut_beta_earlysum<-as.numeric(as.character(results_males_earlysum[results_males_earlysum$Covariates=="ln_end_roaddist:end_cutageclass_new1",7]))
regencut_beta_earlysum<-as.numeric(as.character(results_males_earlysum[results_males_earlysum$Covariates=="ln_end_roaddist:end_cutageclass_regen1",7]))
mean_SL_earlysum<-mean(calf_used_available_final_earlysum[calf_used_available_final_earlysum$used==1,67])
d_road_earlysum<-seq(min(calf_used_available_final_earlysum$ln_end_roaddist), max(calf_used_available_final_earlysum$ln_end_roaddist),length.out = 1000)
RSS_males_cut_new_earlysum<-unique(paste(results_males_earlysum$calf,results_males_earlysum$Year))
RSS_males_cut_regen_earlysum<-unique(paste(results_males_earlysum$calf,results_males_earlysum$Year))

##create responses for each bear
for(i in 1:length(d_road_earlysum)){
  RSS_new_earlysum<-(d_road_earlysum[i]/(d_road_earlysum[i]-(2*mean_SL_earlysum)))^(roaddist_beta_earlysum+(newcut_beta_earlysum*1))
  RSS_regen_earlysum<-(d_road_earlysum[i]/(d_road_earlysum[i]-(2*mean_SL_earlysum)))^(roaddist_beta_earlysum+(regencut_beta_earlysum*1))

  RSS_males_cut_new_earlysum<-as.data.frame(cbind(RSS_males_cut_new_earlysum,RSS_new_earlysum))
  RSS_males_cut_regen_earlysum<-as.data.frame(cbind(RSS_males_cut_regen_earlysum,RSS_regen_earlysum))
}

RSS_males_cut_new_earlysum[,2]<-as.numeric(as.character(RSS_males_cut_new_earlysum[,2]))
RSS_males_cut_regen_earlysum[,2]<-as.numeric(as.character(RSS_males_cut_regen_earlysum[,2]))

average_new<-data.frame(matrix(NA, nrow = 200, ncol = 1000))
b.boot<-1:200
for(i in 1:length(b.boot)){
  calf_bstrap<-as.vector(sample(unique(RSS_males_cut_new_earlysum$RSS_males_cut_new_earlysum),8,replace=TRUE))
  bstrap<-data.frame()
  for (j in 1:length(calf_bstrap)){
    x<-RSS_males_cut_new_earlysum[RSS_males_cut_new_earlysum$RSS_males_cut_new_earlysum==calf_bstrap[j],]
    x2<-x[sample(nrow(x),1),]
    bstrap<-rbind(bstrap,x2)
    mean<-colMeans(bstrap[,2:1001])
    average_new[i,]<-mean
  }
}

RSS_males_cut_new_earlysum2<-melt(average_new[c(1:200),])
d_road_earlysum<-rep(d_road_earlysum,each=200)

RSS_males_cut_new_earlysum<-cbind(RSS_males_cut_new_earlysum2,d_road_earlysum)

RSS_males_cut_new_earlysum_final<-RSS_males_cut_new_earlysum %>% group_by(d_road_earlysum) %>%
  summarise(`5%`=quantile(value, probs=0.025, na.rm=TRUE),
            `50%`=quantile(value, probs=0.5, na.rm=TRUE),
            `95%`=quantile(value, probs=0.975, na.rm=TRUE),
            avg=median(value),
            n=n())

##low motorised

average_regen<-data.frame(matrix(NA, nrow = 200, ncol = 1000))
b.boot<-1:200
for(i in 1:length(b.boot)){
  calf_bstrap<-as.vector(sample(unique(RSS_males_cut_regen_earlysum$RSS_males_cut_regen_earlysum),8,replace=TRUE))
  bstrap<-data.frame()
  for (j in 1:length(calf_bstrap)){
    x<-RSS_males_cut_regen_earlysum[RSS_males_cut_regen_earlysum$RSS_males_cut_regen_earlysum==calf_bstrap[j],]
    x2<-x[sample(nrow(x),1),]
    bstrap<-rbind(bstrap,x2)
    mean<-colMeans(bstrap[,2:1001])
    average_regen[i,]<-mean
  }
}

RSS_males_cut_regen_earlysum2<-melt(average_regen[c(1:200),])

RSS_males_cut_regen_earlysum<-cbind(RSS_males_cut_regen_earlysum2,d_road_earlysum)

RSS_males_cut_regen_earlysum_final<-RSS_males_cut_regen_earlysum %>% group_by(d_road_earlysum) %>%
  summarise(`5%`=quantile(value, probs=0.025, na.rm=TRUE),
            `50%`=quantile(value, probs=0.5, na.rm=TRUE),
            `95%`=quantile(value, probs=0.975, na.rm=TRUE),
            avg=median(value),
            n=n())

cutage<-c(rep("new",1000),rep("regen",1000))

RSS_males_cutagesize_earlysum_final<-rbind(RSS_males_cut_new_earlysum_final,RSS_males_cut_regen_earlysum_final)
RSS_males_cutagesize_earlysum_final<-cbind(RSS_males_cutagesize_earlysum_final,cutage)
RSS_males_cutagesize_earlysum_final$lnRSS <- log(RSS_males_cutagesize_earlysum_final$`50%`)
RSS_males_cutagesize_earlysum_final$lnRSS5 <- log(RSS_males_cutagesize_earlysum_final$`5%`)
RSS_males_cutagesize_earlysum_final$lnRSS95 <- log(RSS_males_cutagesize_earlysum_final$`95%`)
RSS_males_cutagesize_earlysum_final$lnavg <- log(RSS_males_cutagesize_earlysum_final$avg)
RSS_males_cutagesize_earlysum_final$d_road_exp <- exp(RSS_males_cutagesize_earlysum_final$d_road_earlysum)
RSS_males_cutagesize_earlysum_final$d_road_earlysum <- NULL
RSS_males_cutagesize_earlysum_final$Season <- "Early summer"

ggplot(RSS_males_cutagesize_earlysum_final, aes(x=d_road_earlysum_exp, y=lnRSS,fill=cutage,colour=cutage)) +
  geom_line() +
  geom_ribbon(aes(ymin=lnRSS5, ymax=lnRSS95), alpha=0.2)+xlim(0,1000)+ylim(0,0.5)


## RSS - Late sum
roaddist_beta_latesum<-as.numeric(as.character(results_males_latesum[results_males_latesum$Covariates=="ln_end_roaddist",7]))
newcut_beta_latesum<-as.numeric(as.character(results_males_latesum[results_males_latesum$Covariates=="ln_end_roaddist:end_cutageclass_new1",7]))
regencut_beta_latesum<-as.numeric(as.character(results_males_latesum[results_males_latesum$Covariates=="ln_end_roaddist:end_cutageclass_regen1",7]))
mean_SL_latesum<-mean(calf_used_available_final_latesum[calf_used_available_final_latesum$used==1,67])
d_road_latesum<-seq(min(calf_used_available_final_latesum$ln_end_roaddist), max(calf_used_available_final_latesum$ln_end_roaddist),length.out = 1000)
RSS_males_cut_new_latesum<-unique(paste(results_males_latesum$calf,results_males_latesum$Year))
RSS_males_cut_regen_latesum<-unique(paste(results_males_latesum$calf,results_males_latesum$Year))

##create responses for each bear
for(i in 1:length(d_road_latesum)){
  RSS_new_latesum<-(d_road_latesum[i]/(d_road_latesum[i]-(2*mean_SL_latesum)))^(roaddist_beta_latesum+(newcut_beta_latesum*1))
  RSS_regen_latesum<-(d_road_latesum[i]/(d_road_latesum[i]-(2*mean_SL_latesum)))^(roaddist_beta_latesum+(regencut_beta_latesum*1))

  RSS_males_cut_new_latesum<-as.data.frame(cbind(RSS_males_cut_new_latesum,RSS_new_latesum))
  RSS_males_cut_regen_latesum<-as.data.frame(cbind(RSS_males_cut_regen_latesum,RSS_regen_latesum))
}

RSS_males_cut_new_latesum[,2]<-as.numeric(as.character(RSS_males_cut_new_latesum[,2]))
RSS_males_cut_regen_latesum[,2]<-as.numeric(as.character(RSS_males_cut_regen_latesum[,2]))

average_new<-data.frame(matrix(NA, nrow = 200, ncol = 1000))
b.boot<-1:200
for(i in 1:length(b.boot)){
  calf_bstrap<-as.vector(sample(unique(RSS_males_cut_new_latesum$RSS_males_cut_new_latesum),8,replace=TRUE))
  bstrap<-data.frame()
  for (j in 1:length(calf_bstrap)){
    x<-RSS_males_cut_new_latesum[RSS_males_cut_new_latesum$RSS_males_cut_new_latesum==calf_bstrap[j],]
    x2<-x[sample(nrow(x),1),]
    bstrap<-rbind(bstrap,x2)
    mean<-colMeans(bstrap[,2:1001])
    average_new[i,]<-mean
  }
}

RSS_males_cut_new_latesum2<-melt(average_new[c(1:200),])
d_road_latesum<-rep(d_road_latesum,each=200)

RSS_males_cut_new_latesum<-cbind(RSS_males_cut_new_latesum2,d_road_latesum)

RSS_males_cut_new_latesum_final<-RSS_males_cut_new_latesum %>% group_by(d_road_latesum) %>%
  summarise(`5%`=quantile(value, probs=0.025, na.rm=TRUE),
            `50%`=quantile(value, probs=0.5, na.rm=TRUE),
            `95%`=quantile(value, probs=0.975, na.rm=TRUE),
            avg=median(value),
            n=n())

##low motorised

average_regen<-data.frame(matrix(NA, nrow = 200, ncol = 1000))
b.boot<-1:200
for(i in 1:length(b.boot)){
  calf_bstrap<-as.vector(sample(unique(RSS_males_cut_regen_latesum$RSS_males_cut_regen_latesum),8,replace=TRUE))
  bstrap<-data.frame()
  for (j in 1:length(calf_bstrap)){
    x<-RSS_males_cut_regen_latesum[RSS_males_cut_regen_latesum$RSS_males_cut_regen_latesum==calf_bstrap[j],]
    x2<-x[sample(nrow(x),1),]
    bstrap<-rbind(bstrap,x2)
    mean<-colMeans(bstrap[,2:1001])
    average_regen[i,]<-mean
  }
}

RSS_males_cut_regen_latesum2<-melt(average_regen[c(1:200),])

RSS_males_cut_regen_latesum<-cbind(RSS_males_cut_regen_latesum2,d_road_latesum)

RSS_males_cut_regen_latesum_final<-RSS_males_cut_regen_latesum %>% group_by(d_road_latesum) %>%
  summarise(`5%`=quantile(value, probs=0.025, na.rm=TRUE),
            `50%`=quantile(value, probs=0.5, na.rm=TRUE),
            `95%`=quantile(value, probs=0.975, na.rm=TRUE),
            avg=median(value),
            n=n())

cutage<-c(rep("new",1000),rep("regen",1000))

RSS_males_cutagesize_latesum_final<-rbind(RSS_males_cut_new_latesum_final,RSS_males_cut_regen_latesum_final)
RSS_males_cutagesize_latesum_final<-cbind(RSS_males_cutagesize_latesum_final,cutage)
RSS_males_cutagesize_latesum_final$lnRSS <- log(RSS_males_cutagesize_latesum_final$`50%`)
RSS_males_cutagesize_latesum_final$lnRSS5 <- log(RSS_males_cutagesize_latesum_final$`5%`)
RSS_males_cutagesize_latesum_final$lnRSS95 <- log(RSS_males_cutagesize_latesum_final$`95%`)
RSS_males_cutagesize_latesum_final$lnavg <- log(RSS_males_cutagesize_latesum_final$avg)
RSS_males_cutagesize_latesum_final$d_road_exp <- exp(RSS_males_cutagesize_latesum_final$d_road_latesum)
RSS_males_cutagesize_latesum_final$d_road_latesum <- NULL
RSS_males_cutagesize_latesum_final$Season <- "Late summer"

ggplot(RSS_males_cutagesize_latesum_final, aes(x=d_road_latesum_exp, y=lnRSS,fill=cutage,colour=cutage)) +
  geom_line() +
  geom_ribbon(aes(ymin=lnRSS5, ymax=lnRSS95), alpha=0.2)+xlim(0,1000)+ylim(0,0.5)


## RSS - Autumn
roaddist_beta_autumn<-as.numeric(as.character(results_males_autumn[results_males_autumn$Covariates=="ln_end_roaddist",7]))
newcut_beta_autumn<-as.numeric(as.character(results_males_autumn[results_males_autumn$Covariates=="ln_end_roaddist:end_cutageclass_new1",7]))
regencut_beta_autumn<-as.numeric(as.character(results_males_autumn[results_males_autumn$Covariates=="ln_end_roaddist:end_cutageclass_regen1",7]))
mean_SL_autumn<-mean(calf_used_available_final_autumn[calf_used_available_final_autumn$used==1,67])
d_road_autumn<-seq(min(calf_used_available_final_autumn$ln_end_roaddist), max(calf_used_available_final_autumn$ln_end_roaddist),length.out = 1000)
RSS_males_cut_new_autumn<-unique(paste(results_males_autumn$calf,results_males_autumn$Year))
RSS_males_cut_regen_autumn<-unique(paste(results_males_autumn$calf,results_males_autumn$Year))

##create responses for each bear
for(i in 1:length(d_road_autumn)){
  RSS_new_autumn<-(d_road_autumn[i]/(d_road_autumn[i]-(2*mean_SL_autumn)))^(roaddist_beta_autumn+(newcut_beta_autumn*1))
  RSS_regen_autumn<-(d_road_autumn[i]/(d_road_autumn[i]-(2*mean_SL_autumn)))^(roaddist_beta_autumn+(regencut_beta_autumn*1))

  RSS_males_cut_new_autumn<-as.data.frame(cbind(RSS_males_cut_new_autumn,RSS_new_autumn))
  RSS_males_cut_regen_autumn<-as.data.frame(cbind(RSS_males_cut_regen_autumn,RSS_regen_autumn))
}

RSS_males_cut_new_autumn[,2]<-as.numeric(as.character(RSS_males_cut_new_autumn[,2]))
RSS_males_cut_regen_autumn[,2]<-as.numeric(as.character(RSS_males_cut_regen_autumn[,2]))

average_new<-data.frame(matrix(NA, nrow = 200, ncol = 1000))
b.boot<-1:200
for(i in 1:length(b.boot)){
  calf_bstrap<-as.vector(sample(unique(RSS_males_cut_new_autumn$RSS_males_cut_new_autumn),8,replace=TRUE))
  bstrap<-data.frame()
  for (j in 1:length(calf_bstrap)){
    x<-RSS_males_cut_new_autumn[RSS_males_cut_new_autumn$RSS_males_cut_new_autumn==calf_bstrap[j],]
    x2<-x[sample(nrow(x),1),]
    bstrap<-rbind(bstrap,x2)
    mean<-colMeans(bstrap[,2:1001])
    average_new[i,]<-mean
  }
}

RSS_males_cut_new_autumn2<-melt(average_new[c(1:200),])
d_road_autumn<-rep(d_road_autumn,each=200)

RSS_males_cut_new_autumn<-cbind(RSS_males_cut_new_autumn2,d_road_autumn)

RSS_males_cut_new_autumn_final<-RSS_males_cut_new_autumn %>% group_by(d_road_autumn) %>%
  summarise(`5%`=quantile(value, probs=0.025, na.rm=TRUE),
            `50%`=quantile(value, probs=0.5, na.rm=TRUE),
            `95%`=quantile(value, probs=0.975, na.rm=TRUE),
            avg=median(value),
            n=n())

##low motorised

average_regen<-data.frame(matrix(NA, nrow = 200, ncol = 1000))
b.boot<-1:200
for(i in 1:length(b.boot)){
  calf_bstrap<-as.vector(sample(unique(RSS_males_cut_regen_autumn$RSS_males_cut_regen_autumn),8,replace=TRUE))
  bstrap<-data.frame()
  for (j in 1:length(calf_bstrap)){
    x<-RSS_males_cut_regen_autumn[RSS_males_cut_regen_autumn$RSS_males_cut_regen_autumn==calf_bstrap[j],]
    x2<-x[sample(nrow(x),1),]
    bstrap<-rbind(bstrap,x2)
    mean<-colMeans(bstrap[,2:1001])
    average_regen[i,]<-mean
  }
}

RSS_males_cut_regen_autumn2<-melt(average_regen[c(1:200),])

RSS_males_cut_regen_autumn<-cbind(RSS_males_cut_regen_autumn2,d_road_autumn)

RSS_males_cut_regen_autumn_final<-RSS_males_cut_regen_autumn %>% group_by(d_road_autumn) %>%
  summarise(`5%`=quantile(value, probs=0.025, na.rm=TRUE),
            `50%`=quantile(value, probs=0.5, na.rm=TRUE),
            `95%`=quantile(value, probs=0.975, na.rm=TRUE),
            avg=median(value),
            n=n())

cutage<-c(rep("new",1000),rep("regen",1000))

RSS_males_cutagesize_autumn_final<-rbind(RSS_males_cut_new_autumn_final,RSS_males_cut_regen_autumn_final)
RSS_males_cutagesize_autumn_final<-cbind(RSS_males_cutagesize_autumn_final,cutage)
RSS_males_cutagesize_autumn_final$lnRSS <- log(RSS_males_cutagesize_autumn_final$`50%`)
RSS_males_cutagesize_autumn_final$lnRSS5 <- log(RSS_males_cutagesize_autumn_final$`5%`)
RSS_males_cutagesize_autumn_final$lnRSS95 <- log(RSS_males_cutagesize_autumn_final$`95%`)
RSS_males_cutagesize_autumn_final$lnavg <- log(RSS_males_cutagesize_autumn_final$avg)
RSS_males_cutagesize_autumn_final$d_road_exp <- exp(RSS_males_cutagesize_autumn_final$d_road_autumn)
RSS_males_cutagesize_autumn_final$d_road_autumn <- NULL
RSS_males_cutagesize_autumn_final$Season <- "Autumn"

ggplot(RSS_males_cutagesize_autumn_final, aes(x=d_road_autumn_exp, y=lnRSS,fill=cutage,colour=cutage)) +
  geom_line() +
  geom_ribbon(aes(ymin=lnRSS5, ymax=lnRSS95), alpha=0.2)+xlim(0,1000)+ylim(0,0.5)



## RSS - Winter
roaddist_beta_winter<-as.numeric(as.character(results_males_winter[results_males_winter$Covariates=="ln_end_roaddist",7]))
newcut_beta_winter<-as.numeric(as.character(results_males_winter[results_males_winter$Covariates=="ln_end_roaddist:end_cutageclass_new1",7]))
regencut_beta_winter<-as.numeric(as.character(results_males_winter[results_males_winter$Covariates=="ln_end_roaddist:end_cutageclass_regen1",7]))
mean_SL_winter<-mean(calf_used_available_final_winter[calf_used_available_final_winter$used==1,67])
d_road_winter<-seq(min(calf_used_available_final_winter$ln_end_roaddist), max(calf_used_available_final_winter$ln_end_roaddist),length.out = 1000)
RSS_males_cut_new_winter<-unique(paste(results_males_winter$calf,results_males_winter$Year))
RSS_males_cut_regen_winter<-unique(paste(results_males_winter$calf,results_males_winter$Year))

##create responses for each bear
for(i in 1:length(d_road_winter)){
  RSS_new_winter<-(d_road_winter[i]/(d_road_winter[i]-(2*mean_SL_winter)))^(roaddist_beta_winter+(newcut_beta_winter*1))
  RSS_regen_winter<-(d_road_winter[i]/(d_road_winter[i]-(2*mean_SL_winter)))^(roaddist_beta_winter+(regencut_beta_winter*1))

  RSS_males_cut_new_winter<-as.data.frame(cbind(RSS_males_cut_new_winter,RSS_new_winter))
  RSS_males_cut_regen_winter<-as.data.frame(cbind(RSS_males_cut_regen_winter,RSS_regen_winter))
}

RSS_males_cut_new_winter[,2]<-as.numeric(as.character(RSS_males_cut_new_winter[,2]))
RSS_males_cut_regen_winter[,2]<-as.numeric(as.character(RSS_males_cut_regen_winter[,2]))

average_new<-data.frame(matrix(NA, nrow = 200, ncol = 1000))
b.boot<-1:200
for(i in 1:length(b.boot)){
  calf_bstrap<-as.vector(sample(unique(RSS_males_cut_new_winter$RSS_males_cut_new_winter),8,replace=TRUE))
  bstrap<-data.frame()
  for (j in 1:length(calf_bstrap)){
    x<-RSS_males_cut_new_winter[RSS_males_cut_new_winter$RSS_males_cut_new_winter==calf_bstrap[j],]
    x2<-x[sample(nrow(x),1),]
    bstrap<-rbind(bstrap,x2)
    mean<-colMeans(bstrap[,2:1001])
    average_new[i,]<-mean
  }
}

RSS_males_cut_new_winter2<-melt(average_new[c(1:200),])
d_road_winter<-rep(d_road_winter,each=200)

RSS_males_cut_new_winter<-cbind(RSS_males_cut_new_winter2,d_road_winter)

RSS_males_cut_new_winter_final<-RSS_males_cut_new_winter %>% group_by(d_road_winter) %>%
  summarise(`5%`=quantile(value, probs=0.025, na.rm=TRUE),
            `50%`=quantile(value, probs=0.5, na.rm=TRUE),
            `95%`=quantile(value, probs=0.975, na.rm=TRUE),
            avg=median(value),
            n=n())

##low motorised

average_regen<-data.frame(matrix(NA, nrow = 200, ncol = 1000))
b.boot<-1:200
for(i in 1:length(b.boot)){
  calf_bstrap<-as.vector(sample(unique(RSS_males_cut_regen_winter$RSS_males_cut_regen_winter),8,replace=TRUE))
  bstrap<-data.frame()
  for (j in 1:length(calf_bstrap)){
    x<-RSS_males_cut_regen_winter[RSS_males_cut_regen_winter$RSS_males_cut_regen_winter==calf_bstrap[j],]
    x2<-x[sample(nrow(x),1),]
    bstrap<-rbind(bstrap,x2)
    mean<-colMeans(bstrap[,2:1001])
    average_regen[i,]<-mean
  }
}

RSS_males_cut_regen_winter2<-melt(average_regen[c(1:200),])

RSS_males_cut_regen_winter<-cbind(RSS_males_cut_regen_winter2,d_road_winter)

RSS_males_cut_regen_winter_final<-RSS_males_cut_regen_winter %>% group_by(d_road_winter) %>%
  summarise(`5%`=quantile(value, probs=0.025, na.rm=TRUE),
            `50%`=quantile(value, probs=0.5, na.rm=TRUE),
            `95%`=quantile(value, probs=0.975, na.rm=TRUE),
            avg=median(value),
            n=n())

cutage<-c(rep("new",1000),rep("regen",1000))

RSS_males_cutagesize_winter_final<-rbind(RSS_males_cut_new_winter_final,RSS_males_cut_regen_winter_final)
RSS_males_cutagesize_winter_final<-cbind(RSS_males_cutagesize_winter_final,cutage)
RSS_males_cutagesize_winter_final$lnRSS <- log(RSS_males_cutagesize_winter_final$`50%`)
RSS_males_cutagesize_winter_final$lnRSS5 <- log(RSS_males_cutagesize_winter_final$`5%`)
RSS_males_cutagesize_winter_final$lnRSS95 <- log(RSS_males_cutagesize_winter_final$`95%`)
RSS_males_cutagesize_winter_final$lnavg <- log(RSS_males_cutagesize_winter_final$avg)
RSS_males_cutagesize_winter_final$d_road_exp <- exp(RSS_males_cutagesize_winter_final$d_road_winter)
RSS_males_cutagesize_winter_final$d_road_winter <- NULL
RSS_males_cutagesize_winter_final$Season <- "Winter"

ggplot(RSS_males_cutagesize_winter_final, aes(x=d_road_winter_exp, y=lnRSS,fill=cutage,colour=cutage)) +
  geom_line() +
  geom_ribbon(aes(ymin=lnRSS5, ymax=lnRSS95), alpha=0.2)+xlim(0,1000)+ylim(0,0.5)


RSS_males_cutagesize_all_final <- rbind(RSS_males_cutagesize_spring_final,RSS_males_cutagesize_earlysum_final,RSS_males_cutagesize_latesum_final,RSS_males_cutagesize_autumn_final,RSS_males_cutagesize_winter_final)
RSS_males_cutagesize_all_final$Season <- factor(RSS_males_cutagesize_all_final$Season, levels = c("Spring", "Early summer", "Late summer", "Autumn", "Winter"))
RSS_males_newcut_all_final <- RSS_males_cutagesize_all_final[RSS_males_cutagesize_all_final$cutage=="new",]
colnames(RSS_males_newcut_all_final)[11] <- "Distance to road (m)"

newRSS <- ggplot(RSS_males_newcut_all_final, aes(x=`Distance to road (m)`, y=lnRSS,fill=Season,colour=Season)) +
  geom_line() +
  geom_ribbon(aes(ymin=lnRSS5, ymax=lnRSS95), alpha=0.2)+xlim(0,3000)+ylim(-0.1,0.5)+
  theme(axis.title = element_text(size=18),
        axis.text.x = element_text(size=16, colour = "black"),
        axis.text.y = element_text(size=18, colour = "black"))

RSS_males_regencut_all_final <- RSS_males_cutagesize_all_final[RSS_males_cutagesize_all_final$cutage=="regen",]
colnames(RSS_males_regencut_all_final)[11] <- "Distance to road (m)"

regenRSS <- ggplot(RSS_males_regencut_all_final, aes(x=`Distance to road (m)`, y=lnRSS,fill=Season,colour=Season)) +
  geom_line() +
  geom_ribbon(aes(ymin=lnRSS5, ymax=lnRSS95), alpha=0.2)+xlim(0,3000)+ylim(-0.1,0.5)+
  theme(axis.title = element_text(size=18),
        axis.text.x = element_text(size=16, colour = "black"),
        axis.text.y = element_text(size=18, colour = "black"))

RSSplots <- plot_grid(
  newRSS + theme(legend.position="none"),
  regenRSS + theme(legend.position="none"),
  align = 'vh',
  labels = c("     A) New cut", "B) Regenerating cut"),
  hjust = -0.5,
  vjust=2,
  nrow = 1
)
RSSplots

RSSlegend <- get_legend(
  # create some space to the left of the legend
  newRSS + theme(legend.box.margin = margin(0, 0, 0, 12),legend.text=element_text(size=16), legend.title=element_text(size=18))
)
RSSplot <- plot_grid(RSSplots,RSSlegend,rel_widths = c(3, .4))
RSSplot
ggsave("D:\\OneDrive\\Documents\\Academic\\PhD\\Publications\\iSSA\\Figures\\RSS.tiff", plot=RSSplot, units="in", width=16, height=8, dpi=600, compression = 'lzw')
